<!doctype html>
<html lang="en">
<head>
	<meta charset="UTF-8" />	<title>li3_behaviors\data\model\Behavior – li₃ Behaviors v1.1.x – Documentation – li3 PHP-Framework</title>
		<link rel="stylesheet" href="/assets/v:__PROJECT_VERSION_BUILD__xyzz/css/reset.css" />
	<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Anonymous+Pro:400,700,400italic,700italic" />
	<link rel="stylesheet" href="/assets/v:__PROJECT_VERSION_BUILD__xyzz/css/u1m.css" />
	<link rel="stylesheet" href="/assets/v:__PROJECT_VERSION_BUILD__xyzz/css/li3_docs.css" />
	<link rel="stylesheet" href="/assets/v:__PROJECT_VERSION_BUILD__xyzz/css/highlight.css" />
	
	
	<script src="//cdnjs.cloudflare.com/ajax/libs/require.js/2.1.10/require.min.js"></script>
	<script src="/assets/v:__PROJECT_VERSION_BUILD__xyzz/js/base.js"></script>
	<script src="//cdnjs.cloudflare.com/ajax/libs/prism/0.0.1/prism.min.js"></script>
	
	
	<link rel="icon" href="/assets/ico/site.png">

		<script>
	  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
	  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
	  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
	  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

	  ga('create', 'UA-11048416-4', 'auto');
	  ga('send', 'pageview');
	</script>
	</head>
<body class="layout-default li3-docs">
		<div id="container">
			<header class="main">
	<div class="left">
		<h1><a href="/" class="li3-logo">li3</a></h1>
	</div>
	<div class="right">
		<nav class="main-nav"><a href="http://news.li3.me">News</a><a href="/docs" class="active">Documentation</a><a href="/versions">Versions</a><a href="/present">Presentations</a><a href="/support">Community</a><a href="/development">Development</a></nav>	</div>
</header>							<nav class="crumbs">
	<ul itemscope itemtype="http://schema.org/BreadcrumbList">
			<li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
			<meta itemprop="position" content="1" />
							<a href="/docs" itemscope itemprop="item" itemtype="http://schema.org/Thing"><span itemprop="name">Documentation</span></a>
					</li>
			<li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
			<meta itemprop="position" content="2" />
							<a href="/docs/api/li3_behaviors/1.1.x/li3_behaviors" itemscope itemprop="item" itemtype="http://schema.org/Thing"><span itemprop="name">li₃ Behaviors (1.1.x)</span></a>
					</li>
			<li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
			<meta itemprop="position" content="3" />
							<a href="/docs/api/li3_behaviors/1.1.x/li3_behaviors" itemscope itemprop="item" itemtype="http://schema.org/Thing"><span itemprop="name">li3_behaviors</span></a>
					</li>
			<li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
			<meta itemprop="position" content="4" />
							<a href="/docs/api/li3_behaviors/1.1.x/li3_behaviors/data" itemscope itemprop="item" itemtype="http://schema.org/Thing"><span itemprop="name">data</span></a>
					</li>
			<li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
			<meta itemprop="position" content="5" />
							<a href="/docs/api/li3_behaviors/1.1.x/li3_behaviors/data/model" itemscope itemprop="item" itemtype="http://schema.org/Thing"><span itemprop="name">model</span></a>
					</li>
			<li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
			<meta itemprop="position" content="6" />
							<span itemscope itemprop="item" itemtype="http://schema.org/Thing">
					<span itemprop="name">Behavior</span>
				</span>
					</li>
		</ul>
</nav>						<div id="content">
				<article class="apis-view has-aside-right">

	<nav class="aside aside-right">
			<h3 class="h-gamma">Contents</h3>
		<ul>
			<li class="nav-up"><a href="/docs/api/li3_behaviors/1.1.x/li3_behaviors/data/model" rel="up">../</a>		</ul>
	
													
						<h3 class="h-gamma">Methods</h3>
			<ul>
												<li class="method protected">
				<a href="/docs/api/li3_behaviors/1.1.x/li3_behaviors/data/model/Behavior::_init()">_init()</a>												<li class="method protected">
				<a href="/docs/api/li3_behaviors/1.1.x/li3_behaviors/data/model/Behavior::_config()">_config()</a>												<li class="method protected">
				<a href="/docs/api/li3_behaviors/1.1.x/li3_behaviors/data/model/Behavior::_filters()">_filters()</a>												<li class="method protected">
				<a href="/docs/api/li3_behaviors/1.1.x/li3_behaviors/data/model/Behavior::_finders()">_finders()</a>												<li class="method protected">
				<a href="/docs/api/li3_behaviors/1.1.x/li3_behaviors/data/model/Behavior::_methods()">_methods()</a>												<li class="method public">
				<a href="/docs/api/li3_behaviors/1.1.x/li3_behaviors/data/model/Behavior::config()">config()</a>							</ul>
								<h3 class="h-gamma">Properties</h3>
			<ul>
												<li class="property protected">
				<a href="/docs/api/li3_behaviors/1.1.x/li3_behaviors/data/model/Behavior::$_defaults">$_defaults</a>												<li class="property protected">
				<a href="/docs/api/li3_behaviors/1.1.x/li3_behaviors/data/model/Behavior::$_config">$_config</a>							</ul>
						</nav>
	<div class="body">
			<h1 class="h-alpha">
		<a href="/docs/api/li3_behaviors/1.1.x/li3_behaviors" class="symbol-segment">li3_behaviors</a>\<a href="/docs/api/li3_behaviors/1.1.x/li3_behaviors/data" class="symbol-segment">data</a>\<a href="/docs/api/li3_behaviors/1.1.x/li3_behaviors/data/model" class="symbol-segment">model</a>\Behavior		</h1>

		<section class="under">
													<div class="extends">
					<span class="extends__title">Extends</span>
											lithium\core\Object									</div>
									<div class="tags">
																<span class="tag">class</span>
			</div>
		</section>

					
			<section>
									<div class="summary">
						<p>Base class that all behaviors must extend. Behaviors can be applied
to a model via its <code>actsAs</code> property. Behaviors have some special
characteristics that should help building them. A behavior must
be created as <code>extensions/data/behavior/&lt;name&gt;.php</code> from where
it can be loaded automatically.</p>
					</div>
				
									<div class="description">
						<ol>
<li><p>Default configuration in <code>$_defaults</code> will automatically be
merged with configuration specified in the <code>actsAs</code> poperty
of the model and be made available in its entirety in the
behaviors <code>$_config</code> property.</p>
</li>
<li><p>Configuratin merge strategies can be controlled by overwriting
the <code>_config()</code> method.</p>
</li>
<li><p>Static calls to the model are transferred to the behavior first
and get the model class name as its first parameter. This allows
you to expose methods as if they were implemented on the model.
Each static method implemented in the behavior receives
two parameters by default: The name of the model class,
an instance of the behavior.</p>
</li>
<li><p>Instance class to the model are transferred to behavior first.
This allows you to expose methods as if the were implement on
the model. Each concrete public method implemented on the
behavior receives three parameters by default: The name of the
model class, an instance of the behavior and the entity.</p>
</li>
<li><p>Each behavior can be instantiated multiple times for each
model once. There is no need to key configurations by
model for example.</p>
</li>
<li><p>Entity methods can be created dynamically. This allows
you to i.e. provide a <code>tags()</code> or <code>taxonomy()</code> method on
the entity dependent of the configuration provided.</p>
</li>
</ol>
<p>This can be achieved by implementing the following method
in the behavior which must return an array of model instance
methods to be added to the model.</p>
					</div>
							</section>

			
			
			
						<section id="related">
				<h3 class="h-beta">Related</h3>
				<ul class="related">
									<li><a href="/docs/api/li3_behaviors/1.1.x/li3_behaviors/data/model/Behavior::_config()">li3_behaviors\data\model\Behavior::_config()</a>									<li><a href="/docs/api/li3_behaviors/1.1.x/li3_behaviors/data/model/Behavior::_methods()">li3_behaviors\data\model\Behavior::_methods()</a>									<li><a href="/docs/api/li3_behaviors/1.1.x/li3_behaviors/data/model/Behaviors">li3_behaviors\data\model\Behaviors</a>								</ul>
			</section>
			
			
			
						<section id="source" class="section">
				<h3 class="h-beta">Source</h3>
				<div id="source" class="source-display">
					<div class="source-wrapper">
						<pre class="source-code"><code class="language-php">class Behavior extends \lithium\core\Object {

	/**
	 * Allows to specify default configuration for the behavior.
	 *
	 * - Overwrite in sublasses where needed. -
	 *
	 * @see li3_behaviors\data\model\Behavior::_config()
	 * @var array
	 */
	protected static $_defaults = [];

	/**
	 * Holding the initialized configuration array of the behavior possibly merged from
	 * the `$_defaults` property and any configuration via the model&#039;s `$_actsAs` property.
	 *
	 * Always at least holds the fully namespaced class name of the
	 * model this behavior is bound to.
	 *
	 * @see li3_behaviors\data\model\Behavior::_config()
	 * @var array
	 */
	protected $_config = [];

	protected function _init() {
		parent::_init();

		$model = $this-&gt;_config[&#039;model&#039;];
		$behavior = $this;

		$this-&gt;_config = static::_config($model, $behavior, $this-&gt;_config, static::$_defaults);
		static::_filters($model, $behavior);
		static::_finders($model, $behavior);

		if ($methods = static::_methods($model, $behavior)) {
			$model::instanceMethods($methods);
		}
	}

	/**
	 * Initializes configuration into `$_config` using `config()`.
	 *
	 * - Overwrite to implement your own custom configuration merge strategies. -
	 *
	 * Behaviors often come with different requirements towards configuration.
	 * In some cases just a 1-dimensional array needs to be merged (`$config +
	 * $defaults`) in other cases nested multi-dimensional arrays must be merged
	 * or even normalized in a custom way.
	 *
	 * That&#039;s why merging the defaults with the provided configuration can be
	 * controlled easily by yourself - the implementer. By default we do a simple
	 * one-dimensional merge adding defaults and configuration to eachother. To
	 * control configuration merging overwrite this method.
	 *
	 * @see lithium\util\Set::normalize()
	 * @see lithium\util\Set::merge()
	 * @param string $model Class name of the model.
	 * @param object $behavior Instance of the behavior.
	 * @param array $config The configuration supplied by the user.
	 * @param array $defaults The default configuration for this behavior.
	 * @param array The final configuration which should be set for this behavior.
	 */
	protected static function _config($model, $behavior, $config, $defaults) {
		return $config + $defaults;
	}

	/**
	 * Applies filters on $model. Automatically called during initialization
	 * of behavior and model.
	 *
	 *  - Overwrite to apply your own filters. -
	 *
	 * @see lithium\core\StaticObject::applyFilter()
	 * @param string $model Class name of the model.
	 * @param object $behavior Instance of the behavior.
	 */
	protected static function _filters($model, $behavior) {}

	/**
	 * Add finders to $model. Automatically called during initialization
	 * of behavior and model.
	 *
	 *  - Overwrite to add your own finders. -
	 *
	 * @see lithium\data\Model::finder()
	 * @param string $model Class name of the model.
	 * @param object $behavior Instance of the behavior.
	 */
	protected static function _finders($model, $behavior) {}

	/**
	 * Allows for dyamically adding instance methods to the model. The
	 * methods to be added must be returned as an array, where the key
	 * is the name of the concrete method on the model and the value
	 * an anonymous function.
	 *
	 *  - Overwrite to add your own methods. -
	 *
	 * @param string $model Class name of the model.
	 * @param object $behavior Instance of the behavior.
	 * @return array Methods to be added to the model instance.
	 */
	protected static function _methods($model, $behavior) {
		return [];
	}

	/**
	 * Gets/sets the configuration, allows for introspecting and changing behavior configuration.
	 *
	 * @param string|array $key A configuration key or if `null` (default) returns whole
	 *        configuration. If array will merge config values with existing.
	 * @param mixed $value Configuration value if `null` (default) will return $key.
	 * @return array|string Configuration array or configuration option value if $key was string.
	 */
	public function config($key = null, $value = null) {
		if (is_array($key)) {
			return $this-&gt;_config = $key + $this-&gt;_config;
		}
		if ($key === null) {
			return $this-&gt;_config;
		}
		if ($value !== null) {
			return $this-&gt;_config[$key] = $value;
		}
		return isset($this-&gt;_config[$key]) ? $this-&gt;_config[$key] : null;
	}
}</code></pre>
					</div>
				</div>
			</section>
							</div>
	</article>			</div>
		</div>
		<footer class="main">
	<div class="area"></div>
	<div class="area"></div>
	<div class="area"></div>
	<div class="area"></div>

	<div class="social">
		<a href="https://github.com/unionofrad" target="new">GitHub</a>		<span class="separator">/</span>
		<a href="https://twitter.com/unionofrad" target="new">Twitter</a>		<span class="separator">/</span>
		<a href="http://www.reddit.com/r/li3" target="new">Reddit</a>		<span class="separator">/</span>
		<a href="https://stackoverflow.com/questions/tagged/lithium" target="new">Stack Overflow</a>	</div>
	<div class="testimonial">
		<img src="/assets/v:__PROJECT_VERSION_BUILD__xyzz/img/testimonials/10.png" alt="Testimonial Image" />		<p>I think it's time you started<br />
writing better code.</p>
	</div>
	<div class="copyright">
		Pretty much everything is (c) 2009-2024 and beyond, the <a href="http://unionofrad.org">Union of RAD</a>.	</div>
</footer>	</body>
</body>
</html>
