<!doctype html>
<html lang="en">
<head>
	<meta charset="UTF-8" />	<title>lithium\data\entity\Document – Framework API v1.0.x – Documentation – li3 PHP-Framework</title>
		<link rel="stylesheet" href="/assets/v:__PROJECT_VERSION_BUILD__xyzz/css/reset.css" />
	<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Anonymous+Pro:400,700,400italic,700italic" />
	<link rel="stylesheet" href="/assets/v:__PROJECT_VERSION_BUILD__xyzz/css/u1m.css" />
	<link rel="stylesheet" href="/assets/v:__PROJECT_VERSION_BUILD__xyzz/css/li3_docs.css" />
	<link rel="stylesheet" href="/assets/v:__PROJECT_VERSION_BUILD__xyzz/css/highlight.css" />
	
	
	<script src="//cdnjs.cloudflare.com/ajax/libs/require.js/2.1.10/require.min.js"></script>
	<script src="/assets/v:__PROJECT_VERSION_BUILD__xyzz/js/base.js"></script>
	<script src="//cdnjs.cloudflare.com/ajax/libs/prism/0.0.1/prism.min.js"></script>
	
	
	<link rel="icon" href="/assets/ico/site.png">

		<script>
	  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
	  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
	  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
	  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

	  ga('create', 'UA-11048416-4', 'auto');
	  ga('send', 'pageview');
	</script>
	</head>
<body class="layout-default li3-docs">
		<div id="container">
			<header class="main">
	<div class="left">
		<h1><a href="/" class="li3-logo">li3</a></h1>
	</div>
	<div class="right">
		<nav class="main-nav"><a href="http://news.li3.me">News</a><a href="/docs" class="active">Documentation</a><a href="/versions">Versions</a><a href="/present">Presentations</a><a href="/support">Community</a><a href="/development">Development</a></nav>	</div>
</header>							<nav class="crumbs">
	<ul itemscope itemtype="http://schema.org/BreadcrumbList">
			<li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
			<meta itemprop="position" content="1" />
							<a href="/docs" itemscope itemprop="item" itemtype="http://schema.org/Thing"><span itemprop="name">Documentation</span></a>
					</li>
			<li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
			<meta itemprop="position" content="2" />
							<a href="/docs/api/lithium/1.0.x/lithium" itemscope itemprop="item" itemtype="http://schema.org/Thing"><span itemprop="name">Framework API (1.0.x)</span></a>
					</li>
			<li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
			<meta itemprop="position" content="3" />
							<a href="/docs/api/lithium/1.0.x/lithium" itemscope itemprop="item" itemtype="http://schema.org/Thing"><span itemprop="name">lithium</span></a>
					</li>
			<li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
			<meta itemprop="position" content="4" />
							<a href="/docs/api/lithium/1.0.x/lithium/data" itemscope itemprop="item" itemtype="http://schema.org/Thing"><span itemprop="name">data</span></a>
					</li>
			<li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
			<meta itemprop="position" content="5" />
							<a href="/docs/api/lithium/1.0.x/lithium/data/entity" itemscope itemprop="item" itemtype="http://schema.org/Thing"><span itemprop="name">entity</span></a>
					</li>
			<li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
			<meta itemprop="position" content="6" />
							<span itemscope itemprop="item" itemtype="http://schema.org/Thing">
					<span itemprop="name">Document</span>
				</span>
					</li>
		</ul>
</nav>						<div id="content">
				<article class="apis-view has-aside-right">

	<nav class="aside aside-right">
			<h3 class="h-gamma">Contents</h3>
		<ul>
			<li class="nav-up"><a href="/docs/api/lithium/1.0.x/lithium/data/entity" rel="up">../</a>		</ul>
	
													
						<h3 class="h-gamma">Methods</h3>
			<ul>
												<li class="method protected">
				<a href="/docs/api/lithium/1.0.x/lithium/data/entity/Document::_init()">_init()</a>												<li class="method public">
				<a href="/docs/api/lithium/1.0.x/lithium/data/entity/Document::__get()">__get()</a>												<li class="method public">
				<a href="/docs/api/lithium/1.0.x/lithium/data/entity/Document::export()">export()</a>												<li class="method public">
				<a href="/docs/api/lithium/1.0.x/lithium/data/entity/Document::sync()">sync()</a>												<li class="method protected">
				<a href="/docs/api/lithium/1.0.x/lithium/data/entity/Document::_relation()">_relation()</a>												<li class="method protected">
				<a href="/docs/api/lithium/1.0.x/lithium/data/entity/Document::_getNested()">_getNested()</a>												<li class="method public">
				<a href="/docs/api/lithium/1.0.x/lithium/data/entity/Document::__set()">__set()</a>												<li class="method protected">
				<a href="/docs/api/lithium/1.0.x/lithium/data/entity/Document::_setNested()">_setNested()</a>												<li class="method public">
				<a href="/docs/api/lithium/1.0.x/lithium/data/entity/Document::__isset()">__isset()</a>												<li class="method public">
				<a href="/docs/api/lithium/1.0.x/lithium/data/entity/Document::__unset()">__unset()</a>												<li class="method public">
				<a href="/docs/api/lithium/1.0.x/lithium/data/entity/Document::set()">set()</a>												<li class="method public">
				<a href="/docs/api/lithium/1.0.x/lithium/data/entity/Document::offsetGet()">offsetGet()</a>												<li class="method public">
				<a href="/docs/api/lithium/1.0.x/lithium/data/entity/Document::offsetSet()">offsetSet()</a>												<li class="method public">
				<a href="/docs/api/lithium/1.0.x/lithium/data/entity/Document::offsetExists()">offsetExists()</a>												<li class="method public">
				<a href="/docs/api/lithium/1.0.x/lithium/data/entity/Document::offsetUnset()">offsetUnset()</a>												<li class="method public">
				<a href="/docs/api/lithium/1.0.x/lithium/data/entity/Document::rewind()">rewind()</a>												<li class="method public">
				<a href="/docs/api/lithium/1.0.x/lithium/data/entity/Document::valid()">valid()</a>												<li class="method public">
				<a href="/docs/api/lithium/1.0.x/lithium/data/entity/Document::current()">current()</a>												<li class="method public">
				<a href="/docs/api/lithium/1.0.x/lithium/data/entity/Document::key()">key()</a>												<li class="method public">
				<a href="/docs/api/lithium/1.0.x/lithium/data/entity/Document::to()">to()</a>												<li class="method public">
				<a href="/docs/api/lithium/1.0.x/lithium/data/entity/Document::next()">next()</a>												<li class="method public inherited">
				<a href="/docs/api/lithium/1.0.x/lithium/data/Entity::__construct()">__construct()</a>												<li class="method public inherited">
				<a href="/docs/api/lithium/1.0.x/lithium/data/Entity::__call()">__call()</a>												<li class="method public inherited">
				<a href="/docs/api/lithium/1.0.x/lithium/data/Entity::respondsTo()">respondsTo()</a>												<li class="method public inherited">
				<a href="/docs/api/lithium/1.0.x/lithium/data/Entity::data()">data()</a>												<li class="method public inherited">
				<a href="/docs/api/lithium/1.0.x/lithium/data/Entity::model()">model()</a>												<li class="method public inherited">
				<a href="/docs/api/lithium/1.0.x/lithium/data/Entity::parent()">parent()</a>												<li class="method public inherited">
				<a href="/docs/api/lithium/1.0.x/lithium/data/Entity::schema()">schema()</a>												<li class="method public inherited">
				<a href="/docs/api/lithium/1.0.x/lithium/data/Entity::errors()">errors()</a>												<li class="method public inherited">
				<a href="/docs/api/lithium/1.0.x/lithium/data/Entity::exists()">exists()</a>												<li class="method public inherited">
				<a href="/docs/api/lithium/1.0.x/lithium/data/Entity::increment()">increment()</a>												<li class="method public inherited">
				<a href="/docs/api/lithium/1.0.x/lithium/data/Entity::decrement()">decrement()</a>												<li class="method public inherited">
				<a href="/docs/api/lithium/1.0.x/lithium/data/Entity::modified()">modified()</a>												<li class="method public inherited">
				<a href="/docs/api/lithium/1.0.x/lithium/data/Entity::assignTo()">assignTo()</a>												<li class="method public inherited">
				<a href="/docs/api/lithium/1.0.x/lithium/data/Entity::__toString()">__toString()</a>												<li class="method public inherited">
				<a href="/docs/api/lithium/1.0.x/lithium/data/Entity::serialize()">serialize()</a>												<li class="method public inherited">
				<a href="/docs/api/lithium/1.0.x/lithium/data/Entity::unserialize()">unserialize()</a>												<li class="method public inherited">
				<a href="/docs/api/lithium/1.0.x/lithium/core/Object::applyFilter()">applyFilter()</a>												<li class="method public inherited">
				<a href="/docs/api/lithium/1.0.x/lithium/core/Object::invokeMethod()">invokeMethod()</a>												<li class="method public inherited">
				<a href="/docs/api/lithium/1.0.x/lithium/core/Object::__set_state()">__set_state()</a>												<li class="method protected inherited">
				<a href="/docs/api/lithium/1.0.x/lithium/core/Object::_instance()">_instance()</a>												<li class="method protected inherited">
				<a href="/docs/api/lithium/1.0.x/lithium/core/Object::_filter()">_filter()</a>												<li class="method protected inherited">
				<a href="/docs/api/lithium/1.0.x/lithium/core/Object::_parents()">_parents()</a>												<li class="method protected inherited">
				<a href="/docs/api/lithium/1.0.x/lithium/core/Object::_stop()">_stop()</a>							</ul>
								<h3 class="h-gamma">Properties</h3>
			<ul>
												<li class="property protected">
				<a href="/docs/api/lithium/1.0.x/lithium/data/entity/Document::$_pathKey">$_pathKey</a>												<li class="property protected">
				<a href="/docs/api/lithium/1.0.x/lithium/data/entity/Document::$_stats">$_stats</a>												<li class="property protected">
				<a href="/docs/api/lithium/1.0.x/lithium/data/entity/Document::$_valid">$_valid</a>												<li class="property protected">
				<a href="/docs/api/lithium/1.0.x/lithium/data/entity/Document::$_removed">$_removed</a>												<li class="property protected inherited">
				<a href="/docs/api/lithium/1.0.x/lithium/data/Entity::$_model">$_model</a>												<li class="property protected inherited">
				<a href="/docs/api/lithium/1.0.x/lithium/data/Entity::$_data">$_data</a>												<li class="property protected inherited">
				<a href="/docs/api/lithium/1.0.x/lithium/data/Entity::$_relationships">$_relationships</a>												<li class="property protected inherited">
				<a href="/docs/api/lithium/1.0.x/lithium/data/Entity::$_parent">$_parent</a>												<li class="property protected inherited">
				<a href="/docs/api/lithium/1.0.x/lithium/data/Entity::$_errors">$_errors</a>												<li class="property protected inherited">
				<a href="/docs/api/lithium/1.0.x/lithium/data/Entity::$_updated">$_updated</a>												<li class="property protected inherited">
				<a href="/docs/api/lithium/1.0.x/lithium/data/Entity::$_increment">$_increment</a>												<li class="property protected inherited">
				<a href="/docs/api/lithium/1.0.x/lithium/data/Entity::$_exists">$_exists</a>												<li class="property protected inherited">
				<a href="/docs/api/lithium/1.0.x/lithium/data/Entity::$_schema">$_schema</a>												<li class="property protected inherited">
				<a href="/docs/api/lithium/1.0.x/lithium/data/Entity::$_handlers">$_handlers</a>												<li class="property protected inherited">
				<a href="/docs/api/lithium/1.0.x/lithium/data/Entity::$_autoConfig">$_autoConfig</a>												<li class="property protected inherited">
				<a href="/docs/api/lithium/1.0.x/lithium/core/Object::$_config">$_config</a>												<li class="property protected inherited">
				<a href="/docs/api/lithium/1.0.x/lithium/core/Object::$_methodFilters">$_methodFilters</a>												<li class="property protected inherited">
				<a href="/docs/api/lithium/1.0.x/lithium/core/Object::$_parents">$_parents</a>							</ul>
						</nav>
	<div class="body">
			<h1 class="h-alpha">
		<a href="/docs/api/lithium/1.0.x/lithium" class="symbol-segment">lithium</a>\<a href="/docs/api/lithium/1.0.x/lithium/data" class="symbol-segment">data</a>\<a href="/docs/api/lithium/1.0.x/lithium/data/entity" class="symbol-segment">entity</a>\Document		</h1>

		<section class="under">
											<div class="extends">
					<span class="extends__title">Implements</span>
											Iterator									</div>
								<div class="extends">
					<span class="extends__title">Implements</span>
											ArrayAccess									</div>
																	<div class="extends">
					<span class="extends__title">Extends</span>
											<a href="/docs/api/lithium/1.0.x/lithium/data/Entity" class="extends__symbol">lithium\data\Entity</a>									</div>
									<div class="tags">
																<span class="tag">class</span>
			</div>
		</section>

					
			<section>
									<div class="summary">
						<p><code>Document</code> is an alternative to the <code>entity\Record</code> class, which is optimized for
organizing collections of entities from document-oriented databases such as CouchDB or MongoDB.
A <code>Document</code> object's fields can represent a collection of both simple and complex data types,
as well as other <code>Document</code> objects. Given the following data (document) structure:</p>
					</div>
				
									<div class="description">
						<pre><code class="language-json">{
	_id: 12345.
	name: 'Acme, Inc.',
	employees: {
		'Larry': { email: 'larry@acme.com' },
		'Curly': { email: 'curly@acme.com' },
		'Moe': { email: 'moe@acme.com' }
	}
}
</code></pre>
<p>You can query the object as follows:</p>
<pre><code class="language-php">$acme = Company::find(12345);
</code></pre>
<p>This returns a <code>Document</code> object, populated with the raw representation of the data.</p>
<pre><code class="language-php">print_r($acme-&gt;to('array'));

// Yields:
//	array(
//	'_id' =&gt; 12345,
//	'name' =&gt; 'Acme, Inc.',
//	'employees' =&gt; array(
//		'Larry' =&gt; array('email' =&gt; 'larry@acme.com'),
//		'Curly' =&gt; array('email' =&gt; 'curly@acme.com'),
//		'Moe' =&gt; array('email' =&gt; 'moe@acme.com')
//	)
//)
</code></pre>
<p>As with other database objects, a <code>Document</code> exposes its fields as object properties, like so:</p>
<pre><code class="language-php">echo $acme-&gt;name; // echoes 'Acme, Inc.'
</code></pre>
<p>However, accessing a field containing a data set will return that data set wrapped in a
sub-<code>Document</code> object., i.e.:</p>
<pre><code class="language-php">$employees = $acme-&gt;employees;
// returns a Document object with the data in 'employees'
</code></pre>
					</div>
							</section>

			
			
			
			
			
			
						<section id="source" class="section">
				<h3 class="h-beta">Source</h3>
				<div id="source" class="source-display">
					<div class="source-wrapper">
						<pre class="source-code"><code class="language-php">class Document extends \lithium\data\Entity implements \Iterator, \ArrayAccess {

	/**
	 * If this `Document` instance has a parent document (see `$_parent`), this value indicates
	 * the key name of the parent document that contains it.
	 *
	 * @see lithium\data\entity\Document::$_parent
	 * @var string
	 */
	protected $_pathKey = null;

	/**
	 * Contains an array of backend-specific statistics generated by the query that produced this
	 * `Document` object. These stats are accessible via the `stats()` method.
	 *
	 * @see lithium\data\collection\DocumentSet::stats()
	 * @var array
	 */
	protected $_stats = array();

	/**
	 * Holds the current iteration state. Used by `Document::valid()` to terminate `foreach` loops
	 * when there are no more fields to iterate over.
	 *
	 * @var boolean
	 */
	protected $_valid = false;

	/**
	 * Removed keys list. Contains names of the fields will be removed from the backend data store
	 *
	 * @var array
	 */
	protected $_removed = array();

	protected function _init() {
		parent::_init();

		$data = (array) $this-&gt;_data;
		$this-&gt;_data = array();
		$this-&gt;_updated = array();
		$this-&gt;_removed = array();

		$this-&gt;_handlers += array(
			&#039;MongoId&#039; =&gt; function($value) { return (string) $value; },
			&#039;MongoDate&#039; =&gt; function($value) { return $value-&gt;sec; }
		);

		$this-&gt;set($data, array(&#039;init&#039; =&gt; true));
		$this-&gt;sync(null, array(), array(&#039;materialize&#039; =&gt; $this-&gt;_exists));
		unset($this-&gt;_autoConfig);
	}

	/**
	 * PHP magic method used when accessing fields as document properties, i.e. `$document-&gt;_id`.
	 *
	 * @param $name The field name, as specified with an object property.
	 * @return mixed Returns the value of the field specified in `$name`, and wraps complex data
	 *         types in sub-`Document` objects.
	 */
	public function &amp;__get($name) {
		if (strpos($name, &#039;.&#039;)) {
			return $this-&gt;_getNested($name);
		}

		if (isset($this-&gt;_embedded[$name]) &amp;&amp; !isset($this-&gt;_relationships[$name])) {
			throw new RuntimeException(&quot;Not implemented.&quot;);
		}
		$result =&amp; parent::__get($name);

		if ($result !== null || array_key_exists($name, $this-&gt;_updated)) {
			return $result;
		}

		if ($field = $this-&gt;schema($name)) {
			if (isset($field[&#039;default&#039;])) {
				$this-&gt;set(array($name =&gt; $field[&#039;default&#039;]));
				return $this-&gt;_updated[$name];
			}
			if (isset($field[&#039;array&#039;]) &amp;&amp; $field[&#039;array&#039;] &amp;&amp; ($model = $this-&gt;_model)) {
				$this-&gt;_updated[$name] = $model::create(array(), array(
					&#039;class&#039; =&gt; &#039;set&#039;,
					&#039;schema&#039; =&gt; $this-&gt;schema(),
					&#039;pathKey&#039; =&gt; $this-&gt;_pathKey ? $this-&gt;_pathKey . &#039;.&#039; . $name : $name,
					&#039;parent&#039; =&gt; $this,
					&#039;model&#039; =&gt; $this-&gt;_model,
					&#039;defaults&#039; =&gt; false
				));
				return $this-&gt;_updated[$name];
			}
		}
		$null = null;
		return $null;
	}

	public function export(array $options = array()) {
		foreach ($this-&gt;_updated as $key =&gt; $val) {
			if ($val instanceof self) {
				$path = $this-&gt;_pathKey ? &quot;{$this-&gt;_pathKey}.&quot; : &#039;&#039;;
				$this-&gt;_updated[$key]-&gt;_pathKey = &quot;{$path}{$key}&quot;;
			}
		}
		return parent::export($options) + array(
			&#039;key&#039; =&gt; $this-&gt;_pathKey,
			&#039;remove&#039; =&gt; $this-&gt;_removed
		);
	}

	/**
	 * Extends the parent implementation to ensure that child documents are properly synced as well.
	 *
	 * @param mixed $id
	 * @param array $data
	 * @param array $options Options when calling this method:
	 *              - `&#039;recursive&#039;` _boolean_: If `true` attempts to sync nested objects as well.
	 *                Otherwise, only syncs the current object. Defaults to `true`.
	 * @return void
	 */
	public function sync($id = null, array $data = array(), array $options = array()) {
		$defaults = array(&#039;recursive&#039; =&gt; true);
		$options += $defaults;

		if (!$options[&#039;recursive&#039;]) {
			return parent::sync($id, $data, $options);
		}

		foreach ($this-&gt;_updated as $key =&gt; $val) {
			if (is_object($val) &amp;&amp; method_exists($val, &#039;sync&#039;)) {
				$nested = isset($data[$key]) ? $data[$key] : array();
				$this-&gt;_updated[$key]-&gt;sync(null, $nested, $options);
			}
		}
		parent::sync($id, $data, $options);
	}

	/**
	 * Instantiates a new `Document` object as a descendant of the current object, and sets all
	 * default values and internal state.
	 *
	 * @param string $classType The type of class to create, either `&#039;entity&#039;` or `&#039;set&#039;`.
	 * @param string $key The key name to which the related object is assigned.
	 * @param array $data The internal data of the related object.
	 * @param array $options Any other options to pass when instantiating the related object.
	 * @return object Returns a new `Document` object instance.
	 */
	protected function _relation($classType, $key, $data, $options = array()) {
		return parent::_relation($classType, $key, $data, array(&#039;exists&#039; =&gt; false) + $options);
	}

	protected function &amp;_getNested($name) {
		$current = $this;
		$null = null;
		$path = explode(&#039;.&#039;, $name);
		$length = count($path) - 1;

		foreach ($path as $i =&gt; $key) {
			if (!isset($current[$key])) {
				return $null;
			}
			$current = $current[$key];

			if (is_scalar($current) &amp;&amp; $i &lt; $length) {
				return $null;
			}
		}
		return $current;
	}

	/**
	 * PHP magic method used when setting properties on the `Document` instance, i.e.
	 * `$document-&gt;title = &#039;Lorem Ipsum&#039;`. If `$value` is a complex data type (i.e. associative
	 * array), it is wrapped in a sub-`Document` object before being appended.
	 *
	 * @param $name The name of the field/property to write to, i.e. `title` in the above example.
	 * @param $value The value to write, i.e. `&#039;Lorem Ipsum&#039;`.
	 * @return void
	 */
	public function __set($name, $value = null) {
		$this-&gt;set(array($name =&gt; $value));
	}

	protected function _setNested($name, $value) {
		$current =&amp; $this;
		$path = explode(&#039;.&#039;, $name);
		$length = count($path) - 1;

		for ($i = 0; $i &lt; $length; $i++) {
			$key = $path[$i];

			if (isset($current[$key])) {
				$next =&amp; $current[$key];
			} else {
				unset($next);
				$next = null;
			}

			if ($next === null &amp;&amp; ($model = $this-&gt;_model)) {
				$current-&gt;set(array($key =&gt; $model::create(array(), array(&#039;defaults&#039; =&gt; false))));
				$next =&amp; $current-&gt;{$key};
			}
			$current =&amp; $next;
		}

		if (is_object($current)) {
			$current-&gt;set(array(end($path) =&gt; $value));
		}
	}

	/**
	 * PHP magic method used to check the presence of a field as document properties, i.e.
	 * `$document-&gt;_id`.
	 *
	 * @param $name The field name, as specified with an object property.
	 * @return boolean True if the field specified in `$name` exists, false otherwise.
	 */
	public function __isset($name) {
		if (strpos($name, &#039;.&#039;)) {
			return $this-&gt;_getNested($name) !== null;
		}
		return isset($this-&gt;_updated[$name]);
	}

	/**
	 * PHP magic method used when unset() is called on a `Document` instance.
	 * Use case for this would be when you wish to edit a document and remove a field, ie.:
	 * ```
	 * $doc = Post::find($id);
	 * unset($doc-&gt;fieldName);
	 * $doc-&gt;save();
	 * ```
	 *
	 * @param string $name The name of the field to remove.
	 * @return void
	 */
	public function __unset($name) {
		$parts = explode(&#039;.&#039;, $name, 2);

		if (isset($parts[1])) {
			unset($this-&gt;{$parts[0]}[$parts[1]]);
		} else {
			unset($this-&gt;_updated[$name]);
			$this-&gt;_removed[$name] = true;
		}
	}

	/**
	 * Allows several properties to be assigned at once.
	 *
	 * For example:
	 * ```
	 * $doc-&gt;set(array(&#039;title&#039; =&gt; &#039;Lorem Ipsum&#039;, &#039;value&#039; =&gt; 42));
	 * ```
	 *
	 * @param array $data An associative array of fields and values to assign to the `Document`.
	 * @param array $options
	 * @return void
	 */
	public function set(array $data, array $options = array()) {
		$defaults = array(&#039;init&#039; =&gt; false);
		$options += $defaults;

		$cast = ($schema = $this-&gt;schema());

		foreach ($data as $key =&gt; $val) {
			unset($this-&gt;_increment[$key]);
			if (strpos($key, &#039;.&#039;)) {
				$this-&gt;_setNested($key, $val);
				continue;
			}
			if ($cast) {
				$pathKey = $this-&gt;_pathKey;
				$model = $this-&gt;_model;
				$parent = $this;
				$val = $schema-&gt;cast($this, $key, $val, compact(&#039;pathKey&#039;, &#039;model&#039;, &#039;parent&#039;));
			}
			if ($val instanceof self) {
				$val-&gt;_exists = $options[&#039;init&#039;] &amp;&amp; $this-&gt;_exists;
				$val-&gt;_pathKey = ($this-&gt;_pathKey ? &quot;{$this-&gt;_pathKey}.&quot; : &#039;&#039;) . $key;
				$val-&gt;_model = $val-&gt;_model ?: $this-&gt;_model;
				$val-&gt;_schema = $val-&gt;_schema ?: $this-&gt;_schema;
			}
			$this-&gt;_updated[$key] = $val;
		}
	}

	/**
	 * Allows document fields to be accessed as array keys, i.e. `$document[&#039;_id&#039;]`.
	 *
	 * @param mixed $offset String or integer indicating the offset or index of a document in a set,
	 *              or the name of a field in an individual document.
	 * @return mixed Returns either a sub-object in the document, or a scalar field value.
	 */
	public function offsetGet($offset) {
		return $this-&gt;__get($offset);
	}

	/**
	 * Allows document fields to be assigned as array keys, i.e. `$document[&#039;_id&#039;] = $id`.
	 *
	 * @param mixed $offset String or integer indicating the offset or the name of a field in an
	 *              individual document.
	 * @param mixed $value The value to assign to the field.
	 * @return void
	 */
	public function offsetSet($offset, $value) {
		return $this-&gt;set(array($offset =&gt; $value));
	}

	/**
	 * Allows document fields to be tested as array keys, i.e. `isset($document[&#039;_id&#039;])`.
	 *
	 * @param mixed $offset String or integer indicating the offset or the name of a field in an
	 *              individual document.
	 * @return boolean Returns `true` if `$offset` is a field in the document, otherwise `false`.
	 */
	public function offsetExists($offset) {
		return $this-&gt;__isset($offset);
	}

	/**
	 * Allows document fields to be unset as array keys, i.e. `unset($document[&#039;_id&#039;])`.
	 *
	 * @param string $key The name of a field in an individual document.
	 * @return void
	 */
	public function offsetUnset($key) {
		return $this-&gt;__unset($key);
	}

	/**
	 * Rewinds to the first item.
	 *
	 * @return mixed The current item after rewinding.
	 */
	public function rewind() {
		reset($this-&gt;_data);
		reset($this-&gt;_updated);
		$this-&gt;_valid = (count($this-&gt;_updated) &gt; 0);
		return current($this-&gt;_updated);
	}

	/**
	 * Used by the `Iterator` interface to determine the current state of the iteration, and when
	 * to stop iterating.
	 *
	 * @return boolean
	 */
	public function valid() {
		return $this-&gt;_valid;
	}

	public function current() {
		$current = current($this-&gt;_data);
		return isset($this-&gt;_removed[key($this-&gt;_data)]) ? null : $current;
	}

	public function key() {
		$key = key($this-&gt;_data);
		return isset($this-&gt;_removed[$key]) ? false : $key;
	}

	/**
	 * Adds conversions checks to ensure certain class types and embedded values are properly cast.
	 *
	 * @param string $format Currently only `array` is supported.
	 * @param array $options
	 * @return mixed
	 */
	public function to($format, array $options = array()) {
		$options[&#039;internal&#039;] = false;
		return parent::to($format, $options);
	}

	/**
	 * Returns the next `Document` in the set, and advances the object&#039;s internal pointer. If the
	 * end of the set is reached, a new document will be fetched from the data source connection
	 * handle (`$_handle`). If no more records can be fetched, returns `null`.
	 *
	 * @return mixed Returns the next record in the set, or `null`, if no more records are
	 *         available.
	 */
	public function next() {
		$prev = key($this-&gt;_data);
		$this-&gt;_valid = (next($this-&gt;_data) !== false);
		$cur = key($this-&gt;_data);

		if (isset($this-&gt;_removed[$cur])) {
			return $this-&gt;next();
		}
		if (!$this-&gt;_valid &amp;&amp; $cur !== $prev &amp;&amp; $cur !== null) {
			$this-&gt;_valid = true;
		}
		return $this-&gt;_valid ? $this-&gt;__get(key($this-&gt;_data)) : null;
	}
}</code></pre>
					</div>
				</div>
			</section>
							</div>
	</article>			</div>
		</div>
		<footer class="main">
	<div class="area"></div>
	<div class="area"></div>
	<div class="area"></div>
	<div class="area"></div>

	<div class="social">
		<a href="https://github.com/unionofrad" target="new">GitHub</a>		<span class="separator">/</span>
		<a href="https://twitter.com/unionofrad" target="new">Twitter</a>		<span class="separator">/</span>
		<a href="http://www.reddit.com/r/li3" target="new">Reddit</a>		<span class="separator">/</span>
		<a href="https://stackoverflow.com/questions/tagged/lithium" target="new">Stack Overflow</a>	</div>
	<div class="testimonial">
		<img src="/assets/v:__PROJECT_VERSION_BUILD__xyzz/img/testimonials/10.png" alt="Testimonial Image" />		<p>I think it's time you started<br />
writing better code.</p>
	</div>
	<div class="copyright">
		Pretty much everything is (c) 2009-2024 and beyond, the <a href="http://unionofrad.org">Union of RAD</a>.	</div>
</footer>	</body>
</body>
</html>
