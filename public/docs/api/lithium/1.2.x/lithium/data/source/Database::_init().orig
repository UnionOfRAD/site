<!doctype html>
<html lang="en">
<head>
	<meta charset="UTF-8" />	<title>lithium\data\source\Database::_init() – Framework API v1.2.x – Documentation – li3 PHP-Framework</title>
		<link rel="stylesheet" href="/assets/v:__PROJECT_VERSION_BUILD__xyzz/css/reset.css" />
	<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Anonymous+Pro:400,700,400italic,700italic" />
	<link rel="stylesheet" href="/assets/v:__PROJECT_VERSION_BUILD__xyzz/css/u1m.css" />
	<link rel="stylesheet" href="/assets/v:__PROJECT_VERSION_BUILD__xyzz/css/li3_docs.css" />
	<link rel="stylesheet" href="/assets/v:__PROJECT_VERSION_BUILD__xyzz/css/highlight.css" />
	
	
	<script src="//cdnjs.cloudflare.com/ajax/libs/require.js/2.1.10/require.min.js"></script>
	<script src="/assets/v:__PROJECT_VERSION_BUILD__xyzz/js/base.js"></script>
	<script src="//cdnjs.cloudflare.com/ajax/libs/prism/0.0.1/prism.min.js"></script>
	
	
	<link rel="icon" href="/assets/ico/site.png">

		<script>
	  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
	  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
	  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
	  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

	  ga('create', 'UA-11048416-4', 'auto');
	  ga('send', 'pageview');
	</script>
	</head>
<body class="layout-default li3-docs">
		<div id="container">
			<header class="main">
	<div class="left">
		<h1><a href="/" class="li3-logo">li3</a></h1>
	</div>
	<div class="right">
		<nav class="main-nav"><a href="http://news.li3.me">News</a><a href="/docs" class="active">Documentation</a><a href="/versions">Versions</a><a href="/present">Presentations</a><a href="/support">Community</a><a href="/development">Development</a></nav>	</div>
</header>							<nav class="crumbs">
	<ul itemscope itemtype="http://schema.org/BreadcrumbList">
			<li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
			<meta itemprop="position" content="1" />
							<a href="/docs" itemscope itemprop="item" itemtype="http://schema.org/Thing"><span itemprop="name">Documentation</span></a>
					</li>
			<li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
			<meta itemprop="position" content="2" />
							<a href="/docs/api/lithium/1.2.x/lithium" itemscope itemprop="item" itemtype="http://schema.org/Thing"><span itemprop="name">Framework API (1.2.x)</span></a>
					</li>
			<li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
			<meta itemprop="position" content="3" />
							<a href="/docs/api/lithium/1.2.x/lithium" itemscope itemprop="item" itemtype="http://schema.org/Thing"><span itemprop="name">lithium</span></a>
					</li>
			<li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
			<meta itemprop="position" content="4" />
							<a href="/docs/api/lithium/1.2.x/lithium/data" itemscope itemprop="item" itemtype="http://schema.org/Thing"><span itemprop="name">data</span></a>
					</li>
			<li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
			<meta itemprop="position" content="5" />
							<a href="/docs/api/lithium/1.2.x/lithium/data/source" itemscope itemprop="item" itemtype="http://schema.org/Thing"><span itemprop="name">source</span></a>
					</li>
			<li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
			<meta itemprop="position" content="6" />
							<a href="/docs/api/lithium/1.2.x/lithium/data/source/Database" itemscope itemprop="item" itemtype="http://schema.org/Thing"><span itemprop="name">Database</span></a>
					</li>
			<li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
			<meta itemprop="position" content="7" />
							<span itemscope itemprop="item" itemtype="http://schema.org/Thing">
					<span itemprop="name">_init()</span>
				</span>
					</li>
		</ul>
</nav>						<div id="content">
				<article class="apis-view has-aside-right">

	<nav class="aside aside-right">
			<h3 class="h-gamma">Contents</h3>
		<ul>
			<li class="nav-up"><a href="/docs/api/lithium/1.2.x/lithium/data/source/Database" rel="up">../</a>		</ul>
	
													
										</nav>
	<div class="body">
			<h1 class="h-alpha">
		<a href="/docs/api/lithium/1.2.x/lithium" class="symbol-segment">lithium</a>\<a href="/docs/api/lithium/1.2.x/lithium/data" class="symbol-segment">data</a>\<a href="/docs/api/lithium/1.2.x/lithium/data/source" class="symbol-segment">source</a>\<a href="/docs/api/lithium/1.2.x/lithium/data/source/Database" class="symbol-segment">Database</a>::_init()		</h1>

		<section class="under">
																<div class="extends">
					<span class="extends__title">
													Overrides
											</span>
					<a href="/docs/api/lithium/1.2.x/lithium/core/ObjectDeprecated::_init()" class="extends__symbol">lithium\core\ObjectDeprecated::_init()</a>				</div>
						<div class="tags">
													<span class="tag protected">protected</span>
												<span class="tag">method</span>
			</div>
		</section>

					
			<section>
									<div class="summary">
						<p>Initializer. Initializes properties like <code>Database::$_strategies</code> because
closures cannot be created within the class definition.</p>
					</div>
				
							</section>

			
			
			
						<section id="related">
				<h3 class="h-beta">Related</h3>
				<ul class="related">
									<li><a href="/docs/api/lithium/1.2.x/lithium/data/source/Database::$_columns">lithium\data\source\Database::$_columns</a>									<li><a href="/docs/api/lithium/1.2.x/lithium/data/source/Database::$_strings">lithium\data\source\Database::$_strings</a>									<li><a href="/docs/api/lithium/1.2.x/lithium/data/source/Database::$_strategies">lithium\data\source\Database::$_strategies</a>								</ul>
			</section>
			
			
			
						<section id="source" class="section">
				<h3 class="h-beta">Source</h3>
				<div id="source" class="source-display">
					<div class="source-wrapper">
						<pre class="source-code"><code class="language-php">	protected function _init() {
		parent::_init();

		if (!$this-&gt;_config[&#039;database&#039;]) {
			throw new ConfigException(&#039;No database configured.&#039;);
		}

		$formatters = $this-&gt;_formatters();

		foreach ($this-&gt;_columns as $type =&gt; $column) {
			if (isset($formatters[$type])) {
				$this-&gt;_columns[$type][&#039;formatter&#039;] = $formatters[$type];
			}
		}

		$this-&gt;_strings += [
			&#039;read&#039; =&gt; &#039;SELECT {:fields} FROM {:source} {:alias} {:joins} {:conditions} {:group} &#039; .
			          &#039;{:having} {:order} {:limit};{:comment}&#039;
		];

		$this-&gt;_strategies += [
			&#039;joined&#039; =&gt; function($model, $context) {

				$with = $context-&gt;with();

				$strategy = function($me, $model, $tree, $path, $from, &amp;$deps) use ($context, $with) {
					foreach ($tree as $name =&gt; $childs) {
						if (!$rel = $model::relations($name)) {
							throw new QueryException(&quot;Model relationship `{$name}` not found.&quot;);
						}

						$constraints = [];
						$alias = $name;
						$relPath = $path ? $path . &#039;.&#039; . $name : $name;
						if (isset($with[$relPath])) {
							list($unallowed, $allowed) = Set::slice($with[$relPath], [
								&#039;alias&#039;,
								&#039;constraints&#039;
							]);
							if ($unallowed) {
								$message = &quot;Only `&#039;alias&#039;` and `&#039;constraints&#039;` are allowed in &quot;;
								$message .= &quot;`&#039;with&#039;` using the `&#039;joined&#039;` strategy.&quot;;
								throw new QueryException($message);
							}
							extract($with[$relPath]);
						}
						$to = $context-&gt;alias($alias, $relPath);

						$deps[$to] = $deps[$from];
						$deps[$to][] = $from;

						if ($context-&gt;relationships($relPath) === null) {
							$context-&gt;relationships($relPath, [
								&#039;type&#039; =&gt; $rel-&gt;type(),
								&#039;model&#039; =&gt; $rel-&gt;to(),
								&#039;fieldName&#039; =&gt; $rel-&gt;fieldName(),
								&#039;alias&#039; =&gt; $to
							]);
							$this-&gt;join($context, $rel, $from, $to, $constraints);
						}

						if (!empty($childs)) {
							$me($me, $rel-&gt;to(), $childs, $relPath, $to, $deps);
						}
					}
				};

				$tree = Set::expand(array_fill_keys(array_keys($with), false));
				$alias = $context-&gt;alias();
				$deps = [$alias =&gt; []];
				$strategy($strategy, $model, $tree, &#039;&#039;, $alias, $deps);

				$models = $context-&gt;models();
				foreach ($context-&gt;fields() as $field) {
					if (!is_string($field)) {
						continue;
					}
					list($alias, $field) = $this-&gt;_splitFieldname($field);
					$alias = $alias ?: $field;
					if ($alias &amp;&amp; isset($models[$alias])) {
						foreach ($deps[$alias] as $depAlias) {
							$depModel = $models[$depAlias];
							$context-&gt;fields([$depAlias =&gt; (array) $depModel::meta(&#039;key&#039;)]);
						}
					}
				}
				$context-&gt;with([]);
			},
			&#039;nested&#039; =&gt; function($model, $context) {}
		];
	}</code></pre>
					</div>
				</div>
			</section>
							</div>
	</article>			</div>
		</div>
		<footer class="main">
	<div class="area"></div>
	<div class="area"></div>
	<div class="area"></div>
	<div class="area"></div>

	<div class="social">
		<a href="https://github.com/unionofrad" target="new">GitHub</a>		<span class="separator">/</span>
		<a href="https://twitter.com/unionofrad" target="new">Twitter</a>		<span class="separator">/</span>
		<a href="http://www.reddit.com/r/li3" target="new">Reddit</a>		<span class="separator">/</span>
		<a href="https://stackoverflow.com/questions/tagged/lithium" target="new">Stack Overflow</a>	</div>
	<div class="testimonial">
		<img src="/assets/v:__PROJECT_VERSION_BUILD__xyzz/img/testimonials/10.png" alt="Testimonial Image" />		<p>I think it's time you started<br />
writing better code.</p>
	</div>
	<div class="copyright">
		Pretty much everything is (c) 2009-2024 and beyond, the <a href="http://unionofrad.org">Union of RAD</a>.	</div>
</footer>	</body>
</body>
</html>
