<!doctype html>
<html lang="en">
<head>
	<meta charset="UTF-8" />	<title>lithium\console\Dispatcher – Framework API v1.2.x – Documentation – li3 PHP-Framework</title>
		<link rel="stylesheet" href="/assets/v:__PROJECT_VERSION_BUILD__xyzz/css/reset.css" />
	<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Anonymous+Pro:400,700,400italic,700italic" />
	<link rel="stylesheet" href="/assets/v:__PROJECT_VERSION_BUILD__xyzz/css/u1m.css" />
	<link rel="stylesheet" href="/assets/v:__PROJECT_VERSION_BUILD__xyzz/css/li3_docs.css" />
	<link rel="stylesheet" href="/assets/v:__PROJECT_VERSION_BUILD__xyzz/css/highlight.css" />
	
	
	<script src="//cdnjs.cloudflare.com/ajax/libs/require.js/2.1.10/require.min.js"></script>
	<script src="/assets/v:__PROJECT_VERSION_BUILD__xyzz/js/base.js"></script>
	<script src="//cdnjs.cloudflare.com/ajax/libs/prism/0.0.1/prism.min.js"></script>
	
	
	<link rel="icon" href="/assets/ico/site.png">

		<script>
	  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
	  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
	  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
	  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

	  ga('create', 'UA-11048416-4', 'auto');
	  ga('send', 'pageview');
	</script>
	</head>
<body class="layout-default li3-docs">
		<div id="container">
			<header class="main">
	<div class="left">
		<h1><a href="/" class="li3-logo">li3</a></h1>
	</div>
	<div class="right">
		<nav class="main-nav"><a href="http://news.li3.me">News</a><a href="/docs" class="active">Documentation</a><a href="/versions">Versions</a><a href="/present">Presentations</a><a href="/support">Community</a><a href="/development">Development</a></nav>	</div>
</header>							<nav class="crumbs">
	<ul itemscope itemtype="http://schema.org/BreadcrumbList">
			<li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
			<meta itemprop="position" content="1" />
							<a href="/docs" itemscope itemprop="item" itemtype="http://schema.org/Thing"><span itemprop="name">Documentation</span></a>
					</li>
			<li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
			<meta itemprop="position" content="2" />
							<a href="/docs/api/lithium/1.2.x/lithium" itemscope itemprop="item" itemtype="http://schema.org/Thing"><span itemprop="name">Framework API (1.2.x)</span></a>
					</li>
			<li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
			<meta itemprop="position" content="3" />
							<a href="/docs/api/lithium/1.2.x/lithium" itemscope itemprop="item" itemtype="http://schema.org/Thing"><span itemprop="name">lithium</span></a>
					</li>
			<li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
			<meta itemprop="position" content="4" />
							<a href="/docs/api/lithium/1.2.x/lithium/console" itemscope itemprop="item" itemtype="http://schema.org/Thing"><span itemprop="name">console</span></a>
					</li>
			<li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
			<meta itemprop="position" content="5" />
							<span itemscope itemprop="item" itemtype="http://schema.org/Thing">
					<span itemprop="name">Dispatcher</span>
				</span>
					</li>
		</ul>
</nav>						<div id="content">
				<article class="apis-view has-aside-right">

	<nav class="aside aside-right">
			<h3 class="h-gamma">Contents</h3>
		<ul>
			<li class="nav-up"><a href="/docs/api/lithium/1.2.x/lithium/console" rel="up">../</a>		</ul>
	
													
						<h3 class="h-gamma">Methods</h3>
			<ul>
												<li class="method public">
				<a href="/docs/api/lithium/1.2.x/lithium/console/Dispatcher::config()">config()</a>												<li class="method public">
				<a href="/docs/api/lithium/1.2.x/lithium/console/Dispatcher::run()">run()</a>												<li class="method protected">
				<a href="/docs/api/lithium/1.2.x/lithium/console/Dispatcher::_callable()">_callable()</a>												<li class="method public">
				<a href="/docs/api/lithium/1.2.x/lithium/console/Dispatcher::applyRules()">applyRules()</a>												<li class="method protected">
				<a href="/docs/api/lithium/1.2.x/lithium/console/Dispatcher::_call()">_call()</a>												<li class="method public deprecated inherited">
				<a href="/docs/api/lithium/1.2.x/lithium/core/StaticObjectDeprecated::respondsTo()">respondsTo()</a>												<li class="method public deprecated inherited">
				<a href="/docs/api/lithium/1.2.x/lithium/core/StaticObjectDeprecated::invokeMethod()">invokeMethod()</a>												<li class="method protected deprecated inherited">
				<a href="/docs/api/lithium/1.2.x/lithium/core/StaticObjectDeprecated::_instance()">_instance()</a>												<li class="method protected deprecated inherited">
				<a href="/docs/api/lithium/1.2.x/lithium/core/StaticObjectDeprecated::_stop()">_stop()</a>												<li class="method protected deprecated inherited">
				<a href="/docs/api/lithium/1.2.x/lithium/core/StaticObjectDeprecated::_parents()">_parents()</a>												<li class="method public deprecated inherited">
				<a href="/docs/api/lithium/1.2.x/lithium/core/StaticObjectDeprecated::applyFilter()">applyFilter()</a>												<li class="method protected deprecated inherited">
				<a href="/docs/api/lithium/1.2.x/lithium/core/StaticObjectDeprecated::_filter()">_filter()</a>							</ul>
								<h3 class="h-gamma">Properties</h3>
			<ul>
												<li class="property protected">
				<a href="/docs/api/lithium/1.2.x/lithium/console/Dispatcher::$_classes">$_classes</a>												<li class="property protected">
				<a href="/docs/api/lithium/1.2.x/lithium/console/Dispatcher::$_rules">$_rules</a>												<li class="property protected deprecated inherited">
				<a href="/docs/api/lithium/1.2.x/lithium/core/StaticObjectDeprecated::$_parents">$_parents</a>												<li class="property protected deprecated inherited">
				<a href="/docs/api/lithium/1.2.x/lithium/core/StaticObjectDeprecated::$_methodFilters">$_methodFilters</a>							</ul>
						</nav>
	<div class="body">
			<h1 class="h-alpha">
		<a href="/docs/api/lithium/1.2.x/lithium" class="symbol-segment">lithium</a>\<a href="/docs/api/lithium/1.2.x/lithium/console" class="symbol-segment">console</a>\Dispatcher		</h1>

		<section class="under">
													<div class="extends">
					<span class="extends__title">Extends</span>
											<a href="/docs/api/lithium/1.2.x/lithium/core/StaticObjectDeprecated" class="extends__symbol">lithium\core\StaticObjectDeprecated</a>									</div>
									<div class="tags">
																<span class="tag">class</span>
			</div>
		</section>

					
			<section>
									<div class="summary">
						<p>The <code>Dispatcher</code> is the outermost layer of the framework, responsible for both receiving the
initial console request and returning back a response at the end of the request's life cycle.</p>
					</div>
				
									<div class="description">
						<p>The console dispatcher is responsible for accepting requests from scripts called from the command
line, and executing the appropriate <code>Command</code> class(es). The <code>run()</code> method accepts an instance
of <code>lithium\console\Request</code>, which encapsulates the console environment and any command-line
parameters passed to the script. <code>Dispatcher</code> then invokes <code>lithium\console\Router</code> to determine
the correct <code>Command</code> class to invoke, and which method should be called.</p>
					</div>
							</section>

			
			
			
			
			
			
						<section id="source" class="section">
				<h3 class="h-beta">Source</h3>
				<div id="source" class="source-display">
					<div class="source-wrapper">
						<pre class="source-code"><code class="language-php">class Dispatcher extends \lithium\core\StaticObjectDeprecated {

	/**
	 * Fully-namespaced router class reference.
	 *
	 * Class must implement a `parse()` method, which must return an array with (at a minimum)
	 * &#039;command&#039; and &#039;action&#039; keys.
	 *
	 * @see lithium\console\Router::parse()
	 * @var array
	 */
	protected static $_classes = [
		&#039;request&#039; =&gt; &#039;lithium\console\Request&#039;,
		&#039;router&#039; =&gt; &#039;lithium\console\Router&#039;
	];

	/**
	 * Contains pre-process format strings for changing Dispatcher&#039;s behavior based on &#039;rules&#039;.
	 *
	 * Each key in the array represents a &#039;rule&#039;; if a key that matches the rule is present (and
	 * not empty) in a route, (i.e. the result of `lithium\console\Router::parse()`) then the rule&#039;s
	 * value will be applied to the route before it is dispatched.  When applying a rule, any array
	 * elements array elements of the flag which are present in the route will be modified using a
	 * `lithium\util\Text::insert()`-formatted string.
	 *
	 * @see lithium\console\Dispatcher::config()
	 * @see lithium\util\Text::insert()
	 * @var array
	 */
	protected static $_rules = [
		&#039;command&#039; =&gt; [[&#039;lithium\util\Inflector&#039;, &#039;camelize&#039;]],
		&#039;action&#039; =&gt; [[&#039;lithium\util\Inflector&#039;, &#039;camelize&#039;, [false]]]
	];

	/**
	 * Used to set configuration parameters for the Dispatcher.
	 *
	 * @param array $config Optional configuration params.
	 * @return array If no parameters are passed, returns an associative array with the
	 *         current configuration, otherwise returns null.
	 */
	public static function config($config = []) {
		if (!$config) {
			return [&#039;rules&#039; =&gt; static::$_rules];
		}
		foreach ($config as $key =&gt; $val) {
			if (isset(static::${&#039;_&#039; . $key})) {
				static::${&#039;_&#039; . $key} = $val + static::${&#039;_&#039; . $key};
			}
		}
	}

	/**
	 * Dispatches a request based on a request object (an instance of `lithium\console\Request`).
	 *
	 *  If `$request` is `null`, a new request object is instantiated based on the value of the
	 * `&#039;request&#039;` key in the `$_classes` array.
	 *
	 * @param object $request An instance of a request object with console request information.  If
	 *        `null`, an instance will be created.
	 * @param array $options
	 * @return object The command action result which is an instance of `lithium\console\Response`.
	 * @filter Allows to execute very early or very late in the command request.
	 */
	public static function run($request = null, $options = []) {
		$defaults = [&#039;request&#039; =&gt; []];
		$options += $defaults;
		$params = compact(&#039;request&#039;, &#039;options&#039;);

		return Filters::run(get_called_class(), __FUNCTION__, $params, function($params) {
			$classes = static::$_classes;

			$request = $params[&#039;request&#039;];
			$options = $params[&#039;options&#039;];
			$router = $classes[&#039;router&#039;];

			$request = $request ?: new $classes[&#039;request&#039;]($options[&#039;request&#039;]);
			$request-&gt;params = $router::parse($request);
			$params = static::applyRules($request-&gt;params);
			Environment::set($request);
			try {
				$callable = static::_callable($request, $params, $options);
				return static::_call($callable, $request, $params);
			} catch (UnexpectedValueException $e) {
				return (object) [&#039;status&#039; =&gt; $e-&gt;getMessage() . &quot;\n&quot;];
			}
		});
	}

	/**
	 * Determines which command to use for current request.
	 *
	 * @param object $request An instance of a `Request` object.
	 * @param array $params Request params that can be accessed inside the filter.
	 * @param array $options
	 * @return class lithium\console\Command Returns the instantiated command object.
	 * @filter
	 */
	protected static function _callable($request, $params, $options) {
		$params = compact(&#039;request&#039;, &#039;params&#039;, &#039;options&#039;);
		return Filters::run(get_called_class(), __FUNCTION__, $params, function($params) {
			$request = $params[&#039;request&#039;];
			$params = $params[&#039;params&#039;];
			$name = $params[&#039;command&#039;];

			if (!$name) {
				$request-&gt;params[&#039;args&#039;][0] = $name;
				$name = &#039;lithium\console\command\Help&#039;;
			}
			if (class_exists($class = Libraries::locate(&#039;command&#039;, $name))) {
				return new $class(compact(&#039;request&#039;));
			}
			throw new UnexpectedValueException(&quot;Command `{$name}` not found.&quot;);
		});
	}

	/**
	 * Attempts to apply a set of formatting rules from `$_rules` to a `$params` array.
	 *
	 * Each formatting rule is applied if the key of the rule in `$_rules` is present and not empty
	 * in `$params`.  Also performs sanity checking against `$params` to ensure that no value
	 * matching a rule is present unless the rule check passes.
	 *
	 * @param array $params An array of route parameters to which rules will be applied.
	 * @return array Returns the `$params` array with formatting rules applied to array values.
	 */
	public static function applyRules($params) {
		$result = [];

		if (!$params) {
			return false;
		}

		foreach (static::$_rules as $name =&gt; $rules) {
			foreach ($rules as $rule) {
				if (!empty($params[$name]) &amp;&amp; isset($rule[0])) {
					$options = array_merge(
						[$params[$name]], isset($rule[2]) ? (array) $rule[2] : []
					);
					$result[$name] = call_user_func_array([$rule[0], $rule[1]], $options);
				}
			}
		}
		return $result + array_diff_key($params, $result);
	}

	/**
	 * Calls a given command with the appropriate action.
	 *
	 * This method is responsible for calling a `$callable` command and returning its result.
	 *
	 * @param string $callable The callable command.
	 * @param string $request The associated `Request` object.
	 * @param string $params Additional params that should be passed along.
	 * @return mixed Returns the result of the called action, typically `true` or `false`.
	 * @filter
	 */
	protected static function _call($callable, $request, $params) {
		$params = compact(&#039;callable&#039;, &#039;request&#039;, &#039;params&#039;);
		return Filters::run(get_called_class(), __FUNCTION__, $params, function($params) {
			if (is_callable($callable = $params[&#039;callable&#039;])) {
				$request = $params[&#039;request&#039;];
				$params = $params[&#039;params&#039;];

				if (!method_exists($callable, $params[&#039;action&#039;])) {
					array_unshift($params[&#039;args&#039;], $request-&gt;params[&#039;action&#039;]);
					$params[&#039;action&#039;] = &#039;run&#039;;
				}
				$isHelp = (
					!empty($params[&#039;help&#039;]) || !empty($params[&#039;h&#039;]) ||
					!method_exists($callable, $params[&#039;action&#039;])
				);
				if ($isHelp) {
					$params[&#039;action&#039;] = &#039;_help&#039;;
				}
				return $callable($params[&#039;action&#039;], $params[&#039;args&#039;]);
			}
			throw new UnexpectedValueException(&quot;Callable `{$callable}` is actually not callable.&quot;);
		});
	}
}</code></pre>
					</div>
				</div>
			</section>
							</div>
	</article>			</div>
		</div>
		<footer class="main">
	<div class="area"></div>
	<div class="area"></div>
	<div class="area"></div>
	<div class="area"></div>

	<div class="social">
		<a href="https://github.com/unionofrad" target="new">GitHub</a>		<span class="separator">/</span>
		<a href="https://twitter.com/unionofrad" target="new">Twitter</a>		<span class="separator">/</span>
		<a href="http://www.reddit.com/r/li3" target="new">Reddit</a>		<span class="separator">/</span>
		<a href="https://stackoverflow.com/questions/tagged/lithium" target="new">Stack Overflow</a>	</div>
	<div class="testimonial">
		<img src="/assets/v:__PROJECT_VERSION_BUILD__xyzz/img/testimonials/10.png" alt="Testimonial Image" />		<p>I think it's time you started<br />
writing better code.</p>
	</div>
	<div class="copyright">
		Pretty much everything is (c) 2009-2024 and beyond, the <a href="http://unionofrad.org">Union of RAD</a>.	</div>
</footer>	</body>
</body>
</html>
