<!doctype html>
<html lang="en">
<head>
	<meta charset="UTF-8" />	<title>lithium\data\source\Database::read() – Framework API v1.3.x – Documentation – li3 PHP-Framework</title>
		<link rel="stylesheet" href="/assets/v:__PROJECT_VERSION_BUILD__xyzz/css/reset.css" />
	<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Anonymous+Pro:400,700,400italic,700italic" />
	<link rel="stylesheet" href="/assets/v:__PROJECT_VERSION_BUILD__xyzz/css/u1m.css" />
	<link rel="stylesheet" href="/assets/v:__PROJECT_VERSION_BUILD__xyzz/css/li3_docs.css" />
	<link rel="stylesheet" href="/assets/v:__PROJECT_VERSION_BUILD__xyzz/css/highlight.css" />
	
	
	<script src="//cdnjs.cloudflare.com/ajax/libs/require.js/2.1.10/require.min.js"></script>
	<script src="/assets/v:__PROJECT_VERSION_BUILD__xyzz/js/base.js"></script>
	<script src="//cdnjs.cloudflare.com/ajax/libs/prism/0.0.1/prism.min.js"></script>
	
	
	<link rel="icon" href="/assets/ico/site.png">

		<script>
	  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
	  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
	  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
	  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

	  ga('create', 'UA-11048416-4', 'auto');
	  ga('send', 'pageview');
	</script>
	</head>
<body class="layout-default li3-docs">
		<div id="container">
			<header class="main">
	<div class="left">
		<h1><a href="/" class="li3-logo">li3</a></h1>
	</div>
	<div class="right">
		<nav class="main-nav"><a href="http://news.li3.me">News</a><a href="/docs" class="active">Documentation</a><a href="/versions">Versions</a><a href="/present">Presentations</a><a href="/support">Community</a><a href="/development">Development</a></nav>	</div>
</header>							<nav class="crumbs">
	<ul itemscope itemtype="http://schema.org/BreadcrumbList">
			<li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
			<meta itemprop="position" content="1" />
							<a href="/docs" itemscope itemprop="item" itemtype="http://schema.org/Thing"><span itemprop="name">Documentation</span></a>
					</li>
			<li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
			<meta itemprop="position" content="2" />
							<a href="/docs/api/lithium/1.3.x/lithium" itemscope itemprop="item" itemtype="http://schema.org/Thing"><span itemprop="name">Framework API (1.3.x)</span></a>
					</li>
			<li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
			<meta itemprop="position" content="3" />
							<a href="/docs/api/lithium/1.3.x/lithium" itemscope itemprop="item" itemtype="http://schema.org/Thing"><span itemprop="name">lithium</span></a>
					</li>
			<li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
			<meta itemprop="position" content="4" />
							<a href="/docs/api/lithium/1.3.x/lithium/data" itemscope itemprop="item" itemtype="http://schema.org/Thing"><span itemprop="name">data</span></a>
					</li>
			<li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
			<meta itemprop="position" content="5" />
							<a href="/docs/api/lithium/1.3.x/lithium/data/source" itemscope itemprop="item" itemtype="http://schema.org/Thing"><span itemprop="name">source</span></a>
					</li>
			<li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
			<meta itemprop="position" content="6" />
							<a href="/docs/api/lithium/1.3.x/lithium/data/source/Database" itemscope itemprop="item" itemtype="http://schema.org/Thing"><span itemprop="name">Database</span></a>
					</li>
			<li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
			<meta itemprop="position" content="7" />
							<span itemscope itemprop="item" itemtype="http://schema.org/Thing">
					<span itemprop="name">read()</span>
				</span>
					</li>
		</ul>
</nav>						<div id="content">
				<article class="apis-view has-aside-right">

	<nav class="aside aside-right">
			<h3 class="h-gamma">Contents</h3>
		<ul>
			<li class="nav-up"><a href="/docs/api/lithium/1.3.x/lithium/data/source/Database" rel="up">../</a>		</ul>
	
													
										</nav>
	<div class="body">
			<h1 class="h-alpha">
		<a href="/docs/api/lithium/1.3.x/lithium" class="symbol-segment">lithium</a>\<a href="/docs/api/lithium/1.3.x/lithium/data" class="symbol-segment">data</a>\<a href="/docs/api/lithium/1.3.x/lithium/data/source" class="symbol-segment">source</a>\<a href="/docs/api/lithium/1.3.x/lithium/data/source/Database" class="symbol-segment">Database</a>::read()		</h1>

		<section class="under">
																<div class="extends">
					<span class="extends__title">
													Implements
											</span>
					<a href="/docs/api/lithium/1.3.x/lithium/data/Source::read()" class="extends__symbol">lithium\data\Source::read()</a>				</div>
						<div class="tags">
													<span class="tag public">public</span>
												<span class="tag">method</span>
			</div>
		</section>

					
			<section>
									<div class="summary">
						<p>Reads records from a database using a <code>lithium\data\model\Query</code> object or raw SQL string.</p>
					</div>
				
							</section>

						<section id="params">
				<h3 class="h-beta">Parameters</h3>
				<ul class="parameters">
											<li>
							<span class="type">string|object</span>
							<code class="name">$query</code>
															<span class="parameter">
									<p><code>lithium\data\model\Query</code> object or SQL string.</p>
								</span>
													</li>
											<li>
							<span class="type">array</span>
							<code class="name">$options</code>
															<span class="parameter">
									<p>If <code>$query</code> is a raw string, contains the values that will be escaped
and quoted. Other options:</p>
<ul>
<li><code>'return'</code> <em>string</em>: switch return between <code>'array'</code>, <code>'item'</code>, or
<code>'resource'</code> <em>string</em>: Defaults to <code>'item'</code>.</li>
</ul>
								</span>
													</li>
									</ul>
			</section>
			
						<section id="return">
				<h3 class="h-beta">Returns</h3>
				<span class="type">mixed</span>
									<span class="return">
						<p>Determined by <code>$options['return']</code>.</p>
					</span>
							</section>
			
						<section id="filter" class="flag">
				<h3 class="h-beta">
					Filter
					<nav class="headline-nav">
						<a href="http://li3.me/docs/book/manual/1.x/common-tasks/filters">see how to use filters</a>					</nav>
				</h3>
				<p>
					This method can be filtered.				</p>
			</section>
			
			
			
			
						<section id="source" class="section">
				<h3 class="h-beta">Source</h3>
				<div id="source" class="source-display">
					<div class="source-wrapper">
						<pre class="source-code"><code class="language-php">	public function read($query, array $options = []) {
		$defaults = [
			&#039;return&#039; =&gt; is_string($query) ? &#039;array&#039; : &#039;item&#039;,
			&#039;schema&#039; =&gt; null,
			&#039;quotes&#039; =&gt; $this-&gt;_quotes
		];
		$options += $defaults;

		$params = compact(&#039;query&#039;, &#039;options&#039;);

		return Filters::run($this, __FUNCTION__, $params, function($params) {
			$query = $params[&#039;query&#039;];
			$args = $params[&#039;options&#039;];
			$return = $args[&#039;return&#039;];
			unset($args[&#039;return&#039;]);

			$model = is_object($query) ? $query-&gt;model() : null;

			if (is_string($query)) {
				$sql = Text::insert($query, $this-&gt;value($args));
			} else {
				if (!$data = $this-&gt;_queryExport($query)) {
					return false;
				}
				$sql = $this-&gt;renderCommand($data[&#039;type&#039;], $data);
			}
			$result = $this-&gt;_execute($sql);

			if ($return === &#039;resource&#039;) {
				return $result;
			}
			if ($return === &#039;item&#039;) {
				$collection = $model::create([], compact(&#039;query&#039;, &#039;result&#039;) + [
					&#039;class&#039; =&gt; &#039;set&#039;, &#039;defaults&#039; =&gt; false
				]);
			} else {
				$columns = $args[&#039;schema&#039;] ?: $this-&gt;schema($query, $result);

				if (!is_array(reset($columns))) {
					$columns = [&#039;&#039; =&gt; $columns];
				}

				$i = 0;
				$records = [];

				foreach ($result as $data) {
					$offset = 0;
					$records[$i] = [];

					foreach ($columns as $path =&gt; $cols) {
						$len = count($cols);
						$values = array_combine($cols, array_slice($data, $offset, $len));
						($path) ? $records[$i][$path] = $values : $records[$i] += $values;
						$offset += $len;
					}
					$i++;
				}
				$collection = Set::expand($records);
			}
			if (is_object($query) &amp;&amp; $query-&gt;with()) {
				$model::embed($collection, $query-&gt;with(), [&#039;return&#039; =&gt; $return]);
			}
			return $collection;
		});
	}</code></pre>
					</div>
				</div>
			</section>
							</div>
	</article>			</div>
		</div>
		<footer class="main">
	<div class="area"></div>
	<div class="area"></div>
	<div class="area"></div>
	<div class="area"></div>

	<div class="social">
		<a href="https://github.com/unionofrad" target="new">GitHub</a>		<span class="separator">/</span>
		<a href="https://twitter.com/unionofrad" target="new">Twitter</a>		<span class="separator">/</span>
		<a href="http://www.reddit.com/r/li3" target="new">Reddit</a>		<span class="separator">/</span>
		<a href="https://stackoverflow.com/questions/tagged/lithium" target="new">Stack Overflow</a>	</div>
	<div class="testimonial">
		<img src="/assets/v:__PROJECT_VERSION_BUILD__xyzz/img/testimonials/10.png" alt="Testimonial Image" />		<p>I think it's time you started<br />
writing better code.</p>
	</div>
	<div class="copyright">
		Pretty much everything is (c) 2009-2024 and beyond, the <a href="http://unionofrad.org">Union of RAD</a>.	</div>
</footer>	</body>
</body>
</html>
