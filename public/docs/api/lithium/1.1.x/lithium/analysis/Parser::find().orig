<!doctype html>
<html lang="en">
<head>
	<meta charset="UTF-8" />	<title>lithium\analysis\Parser::find() – Framework API v1.1.x – Documentation – li3 PHP-Framework</title>
		<link rel="stylesheet" href="/assets/v:__PROJECT_VERSION_BUILD__xyzz/css/reset.css" />
	<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Anonymous+Pro:400,700,400italic,700italic" />
	<link rel="stylesheet" href="/assets/v:__PROJECT_VERSION_BUILD__xyzz/css/u1m.css" />
	<link rel="stylesheet" href="/assets/v:__PROJECT_VERSION_BUILD__xyzz/css/li3_docs.css" />
	<link rel="stylesheet" href="/assets/v:__PROJECT_VERSION_BUILD__xyzz/css/highlight.css" />
	
	
	<script src="//cdnjs.cloudflare.com/ajax/libs/require.js/2.1.10/require.min.js"></script>
	<script src="/assets/v:__PROJECT_VERSION_BUILD__xyzz/js/base.js"></script>
	<script src="//cdnjs.cloudflare.com/ajax/libs/prism/0.0.1/prism.min.js"></script>
	
	
	<link rel="icon" href="/assets/ico/site.png">

		<script>
	  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
	  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
	  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
	  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

	  ga('create', 'UA-11048416-4', 'auto');
	  ga('send', 'pageview');
	</script>
	</head>
<body class="layout-default li3-docs">
		<div id="container">
			<header class="main">
	<div class="left">
		<h1><a href="/" class="li3-logo">li3</a></h1>
	</div>
	<div class="right">
		<nav class="main-nav"><a href="http://news.li3.me">News</a><a href="/docs" class="active">Documentation</a><a href="/versions">Versions</a><a href="/present">Presentations</a><a href="/support">Community</a><a href="/development">Development</a></nav>	</div>
</header>							<nav class="crumbs">
	<ul itemscope itemtype="http://schema.org/BreadcrumbList">
			<li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
			<meta itemprop="position" content="1" />
							<a href="/docs" itemscope itemprop="item" itemtype="http://schema.org/Thing"><span itemprop="name">Documentation</span></a>
					</li>
			<li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
			<meta itemprop="position" content="2" />
							<a href="/docs/api/lithium/1.1.x/lithium" itemscope itemprop="item" itemtype="http://schema.org/Thing"><span itemprop="name">Framework API (1.1.x)</span></a>
					</li>
			<li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
			<meta itemprop="position" content="3" />
							<a href="/docs/api/lithium/1.1.x/lithium" itemscope itemprop="item" itemtype="http://schema.org/Thing"><span itemprop="name">lithium</span></a>
					</li>
			<li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
			<meta itemprop="position" content="4" />
							<a href="/docs/api/lithium/1.1.x/lithium/analysis" itemscope itemprop="item" itemtype="http://schema.org/Thing"><span itemprop="name">analysis</span></a>
					</li>
			<li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
			<meta itemprop="position" content="5" />
							<a href="/docs/api/lithium/1.1.x/lithium/analysis/Parser" itemscope itemprop="item" itemtype="http://schema.org/Thing"><span itemprop="name">Parser</span></a>
					</li>
			<li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
			<meta itemprop="position" content="6" />
							<span itemscope itemprop="item" itemtype="http://schema.org/Thing">
					<span itemprop="name">find()</span>
				</span>
					</li>
		</ul>
</nav>						<div id="content">
				<article class="apis-view has-aside-right">

	<nav class="aside aside-right">
			<h3 class="h-gamma">Contents</h3>
		<ul>
			<li class="nav-up"><a href="/docs/api/lithium/1.1.x/lithium/analysis/Parser" rel="up">../</a>		</ul>
	
													
										</nav>
	<div class="body">
			<h1 class="h-alpha">
		<a href="/docs/api/lithium/1.1.x/lithium" class="symbol-segment">lithium</a>\<a href="/docs/api/lithium/1.1.x/lithium/analysis" class="symbol-segment">analysis</a>\<a href="/docs/api/lithium/1.1.x/lithium/analysis/Parser" class="symbol-segment">Parser</a>::find()		</h1>

		<section class="under">
															<div class="tags">
													<span class="tag public">public</span>
													<span class="tag">static</span>
								<span class="tag">method</span>
			</div>
		</section>

					
			<section>
									<div class="summary">
						<p>Finds a pattern in a block of code.</p>
					</div>
				
							</section>

						<section id="params">
				<h3 class="h-beta">Parameters</h3>
				<ul class="parameters">
											<li>
							<span class="type">string</span>
							<code class="name">$code</code>
													</li>
											<li>
							<span class="type">string</span>
							<code class="name">$pattern</code>
													</li>
											<li>
							<span class="type">array</span>
							<code class="name">$options</code>
															<span class="parameter">
									<p>The list of options to be used when parsing / matching <code>$code</code>:</p>
<ul>
<li>'ignore': An array of token names to ignore while parsing, defaults to
<code>array('T_WHITESPACE')</code></li>
<li>'lineBreaks': If true, all tokens in a single pattern match must appear on the
same line of code, defaults to false</li>
<li>'startOfLine': If true, the pattern must match starting with the beginning of
the line of code to be matched, defaults to false</li>
</ul>
								</span>
													</li>
									</ul>
			</section>
			
						<section id="return">
				<h3 class="h-beta">Returns</h3>
				<span class="type">array</span>
							</section>
			
			
			
			
			
						<section id="source" class="section">
				<h3 class="h-beta">Source</h3>
				<div id="source" class="source-display">
					<div class="source-wrapper">
						<pre class="source-code"><code class="language-php">	public static function find($code, $pattern, array $options = []) {
		$defaults = [
			&#039;all&#039; =&gt; true, &#039;capture&#039; =&gt; [], &#039;ignore&#039; =&gt; [&#039;T_WHITESPACE&#039;],
			&#039;return&#039; =&gt; true, &#039;lineBreaks&#039; =&gt; false, &#039;startOfLine&#039; =&gt; false
		];
		$options += $defaults;
		$results = [];
		$matches = [];
		$patternMatch = [];
		$ret = $options[&#039;return&#039;];

		$tokens = new Collection([&#039;data&#039; =&gt; static::tokenize($code, $options)]);
		$pattern = new Collection([&#039;data&#039; =&gt; static::tokenize($pattern, $options)]);

		$breaks = function($token) use (&amp;$tokens, &amp;$matches, &amp;$patternMatch, $options) {
			if (!$options[&#039;lineBreaks&#039;]) {
				return true;
			}
			if (empty($patternMatch) &amp;&amp; !$options[&#039;startOfLine&#039;]) {
				return true;
			}

			if (empty($patternMatch)) {
				$prev = $tokens-&gt;prev();
				$tokens-&gt;next();
			} else {
				$prev = reset($patternMatch);
			}

			if (empty($patternMatch) &amp;&amp; $options[&#039;startOfLine&#039;]) {
				return ($token[&#039;line&#039;] &gt; $prev[&#039;line&#039;]);
			}
			return ($token[&#039;line&#039;] === $prev[&#039;line&#039;]);
		};

		$capture = function($token) use (&amp;$matches, &amp;$patternMatch, $tokens, $breaks, $options) {
			if ($token === null) {
				$matches = $patternMatch = [];
				return false;
			}

			if (empty($patternMatch)) {
				$prev = $tokens-&gt;prev();
				$tokens-&gt;next();
				if ($options[&#039;startOfLine&#039;] &amp;&amp; $token[&#039;line&#039;] === $prev[&#039;line&#039;]) {
					$patternMatch = $matches = [];
					return false;
				}
			}
			$patternMatch[] = $token;

			if (empty($options[&#039;capture&#039;]) || !in_array($token[&#039;name&#039;], $options[&#039;capture&#039;])) {
				return true;
			}
			if (!$breaks($token)) {
				$matches = [];
				return true;
			}
			$matches[] = $token;
			return true;
		};

		$executors = [
			&#039;*&#039; =&gt; function(&amp;$tokens, &amp;$pattern) use ($options, $capture) {
				$closing = $pattern-&gt;next();
				$tokens-&gt;prev();

				while (($t = $tokens-&gt;next()) &amp;&amp; !Parser::matchToken($closing, $t)) {
					$capture($t);
				}
				$pattern-&gt;next();
			}
		];

		$tokens-&gt;rewind();
		$pattern-&gt;rewind();

		while ($tokens-&gt;valid()) {
			if (!$pattern-&gt;valid()) {
				$pattern-&gt;rewind();

				if (!empty($matches)) {
					$results[] = array_map(
						function($i) use ($ret) { return isset($i[$ret]) ? $i[$ret] : $i; },
						$matches
					);
				}
				$capture(null);
			}

			$p = $pattern-&gt;current();
			$t = $tokens-&gt;current();

			switch (true) {
				case (static::matchToken($p, $t)):
					$capture($t) ? $pattern-&gt;next() : $pattern-&gt;rewind();
				break;
				case (isset($executors[$p[&#039;name&#039;]])):
					$exec = $executors[$p[&#039;name&#039;]];
					$exec($tokens, $pattern);
				break;
				default:
					$capture(null);
					$pattern-&gt;rewind();
				break;
			}
			$tokens-&gt;next();
		}
		return $results;
	}</code></pre>
					</div>
				</div>
			</section>
							</div>
	</article>			</div>
		</div>
		<footer class="main">
	<div class="area"></div>
	<div class="area"></div>
	<div class="area"></div>
	<div class="area"></div>

	<div class="social">
		<a href="https://github.com/unionofrad" target="new">GitHub</a>		<span class="separator">/</span>
		<a href="https://twitter.com/unionofrad" target="new">Twitter</a>		<span class="separator">/</span>
		<a href="http://www.reddit.com/r/li3" target="new">Reddit</a>		<span class="separator">/</span>
		<a href="https://stackoverflow.com/questions/tagged/lithium" target="new">Stack Overflow</a>	</div>
	<div class="testimonial">
		<img src="/assets/v:__PROJECT_VERSION_BUILD__xyzz/img/testimonials/10.png" alt="Testimonial Image" />		<p>I think it's time you started<br />
writing better code.</p>
	</div>
	<div class="copyright">
		Pretty much everything is (c) 2009-2024 and beyond, the <a href="http://unionofrad.org">Union of RAD</a>.	</div>
</footer>	</body>
</body>
</html>
