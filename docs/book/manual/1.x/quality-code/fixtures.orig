<!doctype html>
<html lang="en">
<head>
	<meta charset="UTF-8" />	<title>Fixtures – li₃: The Definitive Guide v1.x – Documentation – li3 PHP-Framework</title>
		<link rel="stylesheet" href="/assets/v:__PROJECT_VERSION_BUILD__xyzz/css/reset.css" />
	<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Anonymous+Pro:400,700,400italic,700italic" />
	<link rel="stylesheet" href="/assets/v:__PROJECT_VERSION_BUILD__xyzz/css/u1m.css" />
	<link rel="stylesheet" href="/assets/v:__PROJECT_VERSION_BUILD__xyzz/css/li3_docs.css" />
	<link rel="stylesheet" href="/assets/v:__PROJECT_VERSION_BUILD__xyzz/css/highlight.css" />
	
	
	<script src="//cdnjs.cloudflare.com/ajax/libs/require.js/2.1.10/require.min.js"></script>
	<script src="/assets/v:__PROJECT_VERSION_BUILD__xyzz/js/base.js"></script>
	<script src="//cdnjs.cloudflare.com/ajax/libs/prism/0.0.1/prism.min.js"></script>
	
	
	<link rel="icon" href="/assets/ico/site.png">

		<script>
	  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
	  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
	  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
	  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

	  ga('create', 'UA-11048416-4', 'auto');
	  ga('send', 'pageview');
	</script>
	</head>
<body class="layout-default li3-docs">
		<div id="container">
			<header class="main">
	<div class="left">
		<h1><a href="/" class="li3-logo">li3</a></h1>
	</div>
	<div class="right">
		<nav class="main-nav"><a href="http://news.li3.me">News</a><a href="/docs" class="active">Documentation</a><a href="/versions">Versions</a><a href="/present">Presentations</a><a href="/support">Community</a><a href="/development">Development</a></nav>	</div>
</header>							<nav class="crumbs">
	<ul itemscope itemtype="http://schema.org/BreadcrumbList">
			<li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
			<meta itemprop="position" content="1" />
							<a href="/docs" itemscope itemprop="item" itemtype="http://schema.org/Thing"><span itemprop="name">Documentation</span></a>
					</li>
			<li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
			<meta itemprop="position" content="2" />
							<a href="/docs/book/manual/1.x" itemscope itemprop="item" itemtype="http://schema.org/Thing"><span itemprop="name">li₃: The Definitive Guide (1.x)</span></a>
					</li>
			<li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
			<meta itemprop="position" content="3" />
							<a href="/docs/book/manual/1.x/quality-code" itemscope itemprop="item" itemtype="http://schema.org/Thing"><span itemprop="name">Quality Code</span></a>
					</li>
			<li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
			<meta itemprop="position" content="4" />
							<span itemscope itemprop="item" itemtype="http://schema.org/Thing">
					<span itemprop="name">Fixtures</span>
				</span>
					</li>
		</ul>
</nav>						<div id="content">
				<article class="books-view has-aside-right">
	<nav class="aside aside-right">
		<h3 class="h-gamma">Contents</h3>
		<ul><li><a href="/docs/book/manual/1.x/common-tasks" class="">Common Tasks</a><ul><li><a href="/docs/book/manual/1.x/common-tasks/logging" class="">Logging</a><li><a href="/docs/book/manual/1.x/common-tasks/plugins" class="">Plugins</a><li><a href="/docs/book/manual/1.x/common-tasks/error-handling" class="">Error Handling</a><li><a href="/docs/book/manual/1.x/common-tasks/caching" class="">Caching</a><li><a href="/docs/book/manual/1.x/common-tasks/filters" class="">Filters</a><li><a href="/docs/book/manual/1.x/common-tasks/etags" class="">Etags</a><li><a href="/docs/book/manual/1.x/common-tasks/globalization" class="">Globalization</a><li><a href="/docs/book/manual/1.x/common-tasks/simple-authentication" class="">Simple Authentication</a><li><a href="/docs/book/manual/1.x/common-tasks/simple-auth-user" class="">Simple Auth User</a><li><a href="/docs/book/manual/1.x/common-tasks/console-applications" class="">Console Applications</a></ul><li><a href="/docs/book/manual/1.x/appendices" class="">Appendices</a><ul><li><a href="/docs/book/manual/1.x/appendices/faqs" class="">FAQs</a><li><a href="/docs/book/manual/1.x/appendices/using-in-other-applications" class="">Using In Other Applications</a></ul><li><a href="/docs/book/manual/1.x/quickstart" class="">Quickstart</a><li><a href="/docs/book/manual/1.x/controllers" class="">Controllers</a><ul><li><a href="/docs/book/manual/1.x/controllers/actions" class="">Actions</a><li><a href="/docs/book/manual/1.x/controllers/flow-control" class="">Flow Control</a><li><a href="/docs/book/manual/1.x/controllers/parameters" class="">Parameters</a><li><a href="/docs/book/manual/1.x/controllers/type-rendering-detection" class="">Type Rendering Detection</a><li><a href="/docs/book/manual/1.x/controllers/routing" class="">Routing</a></ul><li><a href="/docs/book/manual/1.x/installation" class="">Installation</a><ul><li><a href="/docs/book/manual/1.x/installation/requirements" class="">Requirements</a><li><a href="/docs/book/manual/1.x/installation/troubleshooting" class="">Troubleshooting</a><li><a href="/docs/book/manual/1.x/installation/web-servers" class="">Web Servers</a></ul><li><a href="/docs/book/manual/1.x/architecture" class="">Architecture</a><ul><li><a href="/docs/book/manual/1.x/architecture/file-structure" class="">File Structure</a><li><a href="/docs/book/manual/1.x/architecture/response-lifecycle" class="">Response Lifecycle</a><li><a href="/docs/book/manual/1.x/architecture/aop" class="">AOP</a><li><a href="/docs/book/manual/1.x/architecture/mvc" class="">MVC</a><li><a href="/docs/book/manual/1.x/architecture/objects" class="">Objects</a></ul><li><a href="/docs/book/manual/1.x/quality-code" class="">Quality Code</a><ul><li><a href="/docs/book/manual/1.x/quality-code/fixtures" class="active">Fixtures</a><li><a href="/docs/book/manual/1.x/quality-code/analysis" class="">Analysis</a><li><a href="/docs/book/manual/1.x/quality-code/testing" class="">Testing</a><li><a href="/docs/book/manual/1.x/quality-code/security" class="">Security</a></ul><li><a href="/docs/book/manual/1.x/configuration" class="">Configuration</a><ul><li><a href="/docs/book/manual/1.x/configuration/environment" class="">Environment</a><li><a href="/docs/book/manual/1.x/configuration/bootstrapping" class="">Bootstrapping</a><li><a href="/docs/book/manual/1.x/configuration/third-party-libraries" class="">Third Party Libraries</a></ul><li><a href="/docs/book/manual/1.x/views" class="">Views</a><ul><li><a href="/docs/book/manual/1.x/views/layouts" class="">Layouts</a><li><a href="/docs/book/manual/1.x/views/elements" class="">Elements</a><li><a href="/docs/book/manual/1.x/views/helpers" class="">Helpers</a><li><a href="/docs/book/manual/1.x/views/static-content" class="">Static Content</a><li><a href="/docs/book/manual/1.x/views/auto-escaping" class="">Auto Escaping</a></ul><li><a href="/docs/book/manual/1.x/models" class="">Models</a><ul><li><a href="/docs/book/manual/1.x/models/mongodb" class="">Mongodb</a><li><a href="/docs/book/manual/1.x/models/meta" class="">Meta</a><li><a href="/docs/book/manual/1.x/models/relationships" class="">Relationships</a><li><a href="/docs/book/manual/1.x/models/saving" class="">Saving</a><li><a href="/docs/book/manual/1.x/models/using-data-sources" class="">Using Data Sources</a><li><a href="/docs/book/manual/1.x/models/adding-functions" class="">Adding Functions</a><li><a href="/docs/book/manual/1.x/models/data-mutation" class="">Data Mutation</a><li><a href="/docs/book/manual/1.x/models/connections" class="">Connections</a><li><a href="/docs/book/manual/1.x/models/creating-data-sources" class="">Creating Data Sources</a><li><a href="/docs/book/manual/1.x/models/querying" class="">Querying</a><li><a href="/docs/book/manual/1.x/models/validation" class="">Validation</a></ul></ul>	</nav>
	<div class="body">
		<h1><a id="fixtures-management-for-the-li-framework" class="anchor" href="#fixtures-management-for-the-li-framework">Fixtures Management for the li₃ framework.</a></h1>
<p>This plugin provide fixtures managment. Should work with any kind of <code>Source</code>
adapters. The fixture class support the following datasource's hints:</p>
<ul>
<li><p>If <code>Source::enabled('schema')</code> returns <code>true</code>, the <code>Fixture</code> manage schema
(i.e create/drop) via <code>Source::createSchema()</code> &amp; <code>Source::dropSchema()</code>.</p>
</li>
<li><p>If <code>Source::enabled('sources')</code> returns <code>true</code>, the <code>Fixture</code> allow soft drop
(i.e safe options).</p>
</li>
</ul>
<h2><a id="installation" class="anchor" href="#installation">Installation</a></h2>
<p>The preferred installation method is via composer. You can add
the library as a dependency via:</p>
<pre><code class="language-php">composer require unionofrad/li3_fixtures
</code></pre>
<p>li₃ plugins must be registered within your application bootstrap phase
as they use a different (faster) autoloader.</p>
<pre><code class="language-php">Libraries::add('li3_fixtures')
</code></pre>
<p>The official manual has more information on
<a href="http://li3.me/docs/manual/installation/plugins.md">how to register the plugin</a>
with the app or use alternative installation methods (i.e. via GIT).</p>
<h2><a id="api" class="anchor" href="#api">API</a></h2>
<h3><a id="the-fixture-class" class="anchor" href="#the-fixture-class">The Fixture class</a></h3>
<h4><a id="methods" class="anchor" href="#methods">Methods:</a></h4>
<ul>
<li>Fixture::create($safe); //Create the source only</li>
<li>Fixture::save($safe); //Create the source + save the fixture's records in.</li>
<li>Fixture::drop($safe); //Drop the source.</li>
<li>Fixture::populate($records); //Insert a record in the database</li>
<li>Fixture::alter($mode, $fieldname, $value); //Altering the schema before <code>::create()/::save()</code>.</li>
</ul>
<p>Simple example of unit test:</p>
<pre><code class="language-php">&lt;?php
//app/tests/cases/models/SampleTest.php
namespace app\tests\cases\models;

use li3_fixtures\test\Fixture;

class SampleTest extends \lithium\test\Unit {

	public function testFixture() {
		$fixture = new Fixture([
			'connection' =&gt; 'lithium_mysql_test',
			'source' =&gt; 'contacts',
			'fields' =&gt; array(
				'id' =&gt; array('type' =&gt; 'id'),
				'name' =&gt; array('type' =&gt; 'string')
			),
			'records' =&gt; array(
				array('id' =&gt; 1, 'name' =&gt; 'Nate'),
				array('id' =&gt; 2, 'name' =&gt; 'Gwoo')
			)
		]);

		$fixture-&gt;save();

		$fixture-&gt;populate(['id' =&gt; 3, 'name' =&gt; 'Mehlah']);

		$fixture-&gt;drop();
	}
}
?&gt;
</code></pre>
<h3><a id="the-fixtures-class" class="anchor" href="#the-fixtures-class">The Fixtures class</a></h3>
<p><code>Fixture</code> is a kind of <code>Schema</code> which contain records and a source name or a reference to a model.
So let save the above fixture in a class.</p>
<pre><code class="language-php">&lt;?php
//app/tests/fixture/ContactsFixture.php
namespace app\tests\fixture;

class ContactsFixture extends \li3_fixtures\test\Fixture {

	protected $_model = 'app\models\Contacts';

	protected $_fields = array(
		'id' =&gt; ['type' =&gt; 'id'],
		'name' =&gt; ['type' =&gt; 'string']
	);

	protected $_records = [
		array['id' =&gt; 1, 'name' =&gt; 'Nate'],
		array['id' =&gt; 2, 'name' =&gt; 'Gwoo']
	];
}
?&gt;
</code></pre>
<pre><code class="language-php">&lt;?php
//app/models/Contact.php
namespace app\models;

class Contacts extends \lithium\data\Model {}
?&gt;
</code></pre>
<p>If you have numbers of fixtures, it will be interesting to use the <code>Fixtures</code> class.</p>
<p>Example of use case:</p>
<pre><code class="language-php">&lt;?php
//app/tests/integration/Sample2Test.php
namespace app\tests\integration;

use li3_fixtures\test\Fixtures;
use app\models\Contacts;
use app\models\Images;
// and so on...

class Sample2Test extends \lithium\test\Unit {

	public function setUp() {
		Fixtures::config([
			'db' =&gt; [
				'adapter' =&gt; 'Connection',
				'connection' =&gt; 'lithium_mysql_test',
				'fixtures' =&gt; array(
					'contacts' =&gt; 'app\tests\fixture\ContactsFixture',
					'images' =&gt; 'app\tests\fixture\ImagesFixture'
					// and so on...
				)
			]
		]);
		Fixtures::save('db');
	}

	public function tearDown() {
		Fixtures::clear('db');
	}

	public function testFixture() {
		var_export(Contacts::find('all')-&gt;data());
		var_export(Images::find('all')-&gt;data());
	}
}
?&gt;
</code></pre>
<p>Ok so why it's better to set the <code>Fixture::_model</code> instead of <code>Fixture::_source</code> ? Long story short,
models had their own meta <code>'connection'</code> value. If a fixture is "linked" with a model, it will
automagically configure its meta <code>'connection'</code> to the fixture's connection when is created or saved.</p>
<p>Example:</p>
<pre><code class="language-php">&lt;?php
Fixtures::save('db', array('contacts'));
//The line bellow is not needed since Contacts have been configured by ContactsFixture.
Contacts::config(['meta' =&gt; ['connection' =&gt; 'lithium_mysql_test']]);
var_export(Contacts::find('all')-&gt;data());
?&gt;
</code></pre>
<h3><a id="advanced-use-case" class="anchor" href="#advanced-use-case">Advanced use case</a></h3>
<p>For interoperability, sometimes it's usefull to adjust fixtures according a datasources.</p>
<p>You can alter <code>Fixture</code>'s instance before creating it like the following use case:</p>
<pre><code class="language-php">&lt;?php
$fixture-&gt;alter('add', [
	'name' =&gt; 'enabled',
	'type' =&gt; 'boolean'
]); //Add a field

$fixture-&gt;alter('change', [
	'name' =&gt; 'published',
	'value' =&gt; function ($val) {
		return new MongoDate(strtotime($val));
	}
]); //Simple cast for fixture's values according the closure

$fixture-&gt;alter('change', [
	'name' =&gt; 'id',
	'to' =&gt; '_id',
	'value' =&gt; function ($val) {
		return new MongoId('4c3628558ead0e594' . (string) ($val + 1000000));
	}
]); //Renaming the field 'id' to '_id' + cast fixture's values according the closure

$fixture-&gt;alter('change', [
	'name' =&gt; 'bigintger',
	'type' =&gt; 'integer',
	'use' =&gt; 'bigint' //use db specific type
]); //Modifing a field type

$fixture-&gt;alter('drop', 'bigintger'); //Simply dropping a field
?&gt;
</code></pre>
<p>Note :</p>
<p>You can recover a specific fixture's instance from <code>Fixtures</code> using:</p>
<pre><code class="language-php">&lt;?php
$fixture = Fixtures::get('db', 'contacts');
?&gt;
</code></pre>
	</div>
</article>			</div>
		</div>
		<footer class="main">
	<div class="area"></div>
	<div class="area"></div>
	<div class="area"></div>
	<div class="area"></div>

	<div class="social">
		<a href="https://github.com/unionofrad" target="new">GitHub</a>		<span class="separator">/</span>
		<a href="https://twitter.com/unionofrad" target="new">Twitter</a>		<span class="separator">/</span>
		<a href="http://www.reddit.com/r/li3" target="new">Reddit</a>		<span class="separator">/</span>
		<a href="https://stackoverflow.com/questions/tagged/lithium" target="new">Stack Overflow</a>	</div>
	<div class="testimonial">
		<img src="/assets/v:__PROJECT_VERSION_BUILD__xyzz/img/testimonials/10.png" alt="Testimonial Image" />		<p>I think it's time you started<br />
writing better code.</p>
	</div>
	<div class="copyright">
		Pretty much everything is (c) 2009-2024 and beyond, the <a href="http://unionofrad.org">Union of RAD</a>.	</div>
</footer>	</body>
</body>
</html>
