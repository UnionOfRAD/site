<!doctype html>
<html lang="en">
<head>
	<meta charset="UTF-8" />	<title>Etags – li₃: The Definitive Guide v1.x – Documentation – li3 PHP-Framework</title>
		<link rel="stylesheet" href="/assets/v:__PROJECT_VERSION_BUILD__xyzz/css/reset.css" />
	<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Anonymous+Pro:400,700,400italic,700italic" />
	<link rel="stylesheet" href="/assets/v:__PROJECT_VERSION_BUILD__xyzz/css/u1m.css" />
	<link rel="stylesheet" href="/assets/v:__PROJECT_VERSION_BUILD__xyzz/css/li3_docs.css" />
	<link rel="stylesheet" href="/assets/v:__PROJECT_VERSION_BUILD__xyzz/css/highlight.css" />
	
	
	<script src="//cdnjs.cloudflare.com/ajax/libs/require.js/2.1.10/require.min.js"></script>
	<script src="/assets/v:__PROJECT_VERSION_BUILD__xyzz/js/base.js"></script>
	<script src="//cdnjs.cloudflare.com/ajax/libs/prism/0.0.1/prism.min.js"></script>
	
	
	<link rel="icon" href="/assets/ico/site.png">

		<script>
	  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
	  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
	  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
	  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

	  ga('create', 'UA-11048416-4', 'auto');
	  ga('send', 'pageview');
	</script>
	</head>
<body class="layout-default li3-docs">
		<div id="container">
			<header class="main">
	<div class="left">
		<h1><a href="/" class="li3-logo">li3</a></h1>
	</div>
	<div class="right">
		<nav class="main-nav"><a href="http://news.li3.me">News</a><a href="/docs" class="active">Documentation</a><a href="/versions">Versions</a><a href="/present">Presentations</a><a href="/support">Community</a><a href="/development">Development</a></nav>	</div>
</header>							<nav class="crumbs">
	<ul itemscope itemtype="http://schema.org/BreadcrumbList">
			<li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
			<meta itemprop="position" content="1" />
							<a href="/docs" itemscope itemprop="item" itemtype="http://schema.org/Thing"><span itemprop="name">Documentation</span></a>
					</li>
			<li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
			<meta itemprop="position" content="2" />
							<a href="/docs/book/manual/1.x" itemscope itemprop="item" itemtype="http://schema.org/Thing"><span itemprop="name">li₃: The Definitive Guide (1.x)</span></a>
					</li>
			<li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
			<meta itemprop="position" content="3" />
							<a href="/docs/book/manual/1.x/common-tasks" itemscope itemprop="item" itemtype="http://schema.org/Thing"><span itemprop="name">Common Tasks</span></a>
					</li>
			<li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
			<meta itemprop="position" content="4" />
							<span itemscope itemprop="item" itemtype="http://schema.org/Thing">
					<span itemprop="name">Etags</span>
				</span>
					</li>
		</ul>
</nav>						<div id="content">
				<article class="books-view has-aside-right">
	<nav class="aside aside-right">
		<h3 class="h-gamma">Contents</h3>
		<ul><li><a href="/docs/book/manual/1.x/common-tasks" class="">Common Tasks</a><ul><li><a href="/docs/book/manual/1.x/common-tasks/logging" class="">Logging</a><li><a href="/docs/book/manual/1.x/common-tasks/plugins" class="">Plugins</a><li><a href="/docs/book/manual/1.x/common-tasks/error-handling" class="">Error Handling</a><li><a href="/docs/book/manual/1.x/common-tasks/caching" class="">Caching</a><li><a href="/docs/book/manual/1.x/common-tasks/filters" class="">Filters</a><li><a href="/docs/book/manual/1.x/common-tasks/etags" class="active">Etags</a><li><a href="/docs/book/manual/1.x/common-tasks/globalization" class="">Globalization</a><li><a href="/docs/book/manual/1.x/common-tasks/simple-authentication" class="">Simple Authentication</a><li><a href="/docs/book/manual/1.x/common-tasks/simple-auth-user" class="">Simple Auth User</a><li><a href="/docs/book/manual/1.x/common-tasks/console-applications" class="">Console Applications</a></ul><li><a href="/docs/book/manual/1.x/appendices" class="">Appendices</a><ul><li><a href="/docs/book/manual/1.x/appendices/faqs" class="">FAQs</a><li><a href="/docs/book/manual/1.x/appendices/using-in-other-applications" class="">Using In Other Applications</a></ul><li><a href="/docs/book/manual/1.x/quickstart" class="">Quickstart</a><li><a href="/docs/book/manual/1.x/controllers" class="">Controllers</a><ul><li><a href="/docs/book/manual/1.x/controllers/actions" class="">Actions</a><li><a href="/docs/book/manual/1.x/controllers/flow-control" class="">Flow Control</a><li><a href="/docs/book/manual/1.x/controllers/parameters" class="">Parameters</a><li><a href="/docs/book/manual/1.x/controllers/type-rendering-detection" class="">Type Rendering Detection</a><li><a href="/docs/book/manual/1.x/controllers/routing" class="">Routing</a></ul><li><a href="/docs/book/manual/1.x/installation" class="">Installation</a><ul><li><a href="/docs/book/manual/1.x/installation/requirements" class="">Requirements</a><li><a href="/docs/book/manual/1.x/installation/troubleshooting" class="">Troubleshooting</a><li><a href="/docs/book/manual/1.x/installation/web-servers" class="">Web Servers</a></ul><li><a href="/docs/book/manual/1.x/architecture" class="">Architecture</a><ul><li><a href="/docs/book/manual/1.x/architecture/file-structure" class="">File Structure</a><li><a href="/docs/book/manual/1.x/architecture/response-lifecycle" class="">Response Lifecycle</a><li><a href="/docs/book/manual/1.x/architecture/aop" class="">AOP</a><li><a href="/docs/book/manual/1.x/architecture/mvc" class="">MVC</a><li><a href="/docs/book/manual/1.x/architecture/objects" class="">Objects</a></ul><li><a href="/docs/book/manual/1.x/quality-code" class="">Quality Code</a><ul><li><a href="/docs/book/manual/1.x/quality-code/fixtures" class="">Fixtures</a><li><a href="/docs/book/manual/1.x/quality-code/analysis" class="">Analysis</a><li><a href="/docs/book/manual/1.x/quality-code/testing" class="">Testing</a><li><a href="/docs/book/manual/1.x/quality-code/security" class="">Security</a></ul><li><a href="/docs/book/manual/1.x/configuration" class="">Configuration</a><ul><li><a href="/docs/book/manual/1.x/configuration/environment" class="">Environment</a><li><a href="/docs/book/manual/1.x/configuration/bootstrapping" class="">Bootstrapping</a><li><a href="/docs/book/manual/1.x/configuration/third-party-libraries" class="">Third Party Libraries</a></ul><li><a href="/docs/book/manual/1.x/views" class="">Views</a><ul><li><a href="/docs/book/manual/1.x/views/layouts" class="">Layouts</a><li><a href="/docs/book/manual/1.x/views/elements" class="">Elements</a><li><a href="/docs/book/manual/1.x/views/helpers" class="">Helpers</a><li><a href="/docs/book/manual/1.x/views/static-content" class="">Static Content</a><li><a href="/docs/book/manual/1.x/views/auto-escaping" class="">Auto Escaping</a></ul><li><a href="/docs/book/manual/1.x/models" class="">Models</a><ul><li><a href="/docs/book/manual/1.x/models/mongodb" class="">Mongodb</a><li><a href="/docs/book/manual/1.x/models/meta" class="">Meta</a><li><a href="/docs/book/manual/1.x/models/relationships" class="">Relationships</a><li><a href="/docs/book/manual/1.x/models/saving" class="">Saving</a><li><a href="/docs/book/manual/1.x/models/using-data-sources" class="">Using Data Sources</a><li><a href="/docs/book/manual/1.x/models/adding-functions" class="">Adding Functions</a><li><a href="/docs/book/manual/1.x/models/data-mutation" class="">Data Mutation</a><li><a href="/docs/book/manual/1.x/models/connections" class="">Connections</a><li><a href="/docs/book/manual/1.x/models/creating-data-sources" class="">Creating Data Sources</a><li><a href="/docs/book/manual/1.x/models/querying" class="">Querying</a><li><a href="/docs/book/manual/1.x/models/validation" class="">Validation</a></ul></ul>	</nav>
	<div class="body">
		<h1><a id="etag-everything-everything-etagg-ed" class="anchor" href="#etag-everything-everything-etagg-ed">ETag Everything, Everything ETagg'ed</a></h1>
<p>The first goal of this guide is to show you how relatively easy adding web caching support to a li3 application is. The second goal is to introduce you to the topic of web caching in general, showing what makes it so interesting.</p>
<p>The beneficial effects of web caching are most often underestimated but adding even just basic support to an existing application is a guaranteed win for everybody involved.</p>
<p><strong>Embrace the web!</strong></p>
<p>Web caching is both simple and complex. As we don't want to put the cart before the horse, we start simple first. This article assumes that you have a basic understanding of HTTP and applies several simplifications. A full list is presented at the end to give additional pointers for further reading.</p>
<h2><a id="entity-tags" class="anchor" href="#entity-tags">Entity Tags</a></h2>
<p><em>Validation</em> is one aspect of web caching. With it comes the aspect of <em>conditional requests</em>. A typical request/response flow involving web caching and entity tags might look as simple as in the following chart.</p>
<p><img src="/assets/img/lithium_advent_caching_flow.jpg" alt="chart"></p>
<p>The <em>entity tag</em> (also <em>ETag</em> as the HTTP header) is a so called cache validator. In contrast to other validators like <em>Last-Modified</em>, entity tags prove to be <strong>very flexible</strong>. They are perfect for nearly any aspect of an application, generating both dynamic and static content: <em>a typical web application</em>.</p>
<p>Entity tags are like fingerprints of the underlying resource of an URL and change when its content changes. They must only be unique in the scope of that URL. The tag itself can practically be any kind of string - most often this is a hash over <em>some</em> part of the resource.</p>
<p>Now it is important which parts of the resource we choose to generate the hash over. As a last resort this could be as close to the response as computing the hash over the actual body to be sent. Or - and this is much better as we can move the decision of not returning the full response up - generate the hash over the data that is used in rendering the body. Sometimes this work has already been done for you: reuse existing checksums, unique IDs or other modification signals.</p>
<p>In the following three sections we'll visit three different parts of a li3 application and apply basic web caching for: serving files, serving dynamic content, retrieving arbitrary data from a web service.</p>
<h2><a id="serving-files" class="anchor" href="#serving-files">Serving Files</a></h2>
<p>One of the benefits when using MongoDB is that you also get a nice place to store your files. A good example on how and why to do this is <a href="https://github.com/nateabele/photoblog">Nate's photobolog tutorial</a>. This code presented here actually builds off the ideas presented in that tutorial.</p>
<p>While there are many good things that come with storing you files this way, one downside is that in order to respond to file requests now involves PHP and the database in addition to the web server. To compensate this overhead we'll modify the route handler used for serving the files to use web caching.</p>
<p>We setup our <code>Files</code> model to use GridFs and also add a handy but stubbed <code>mimeType()</code> <a href="../models/adding-functions-to-models">instance method</a>. You really want to implement real MIME-type detection here. Either go directly with the <a href="http://php.net/manual/en/intro.fileinfo.php">fileinfo extension</a> or and alternative solution like <a href="https://github.com/davidpersson/mm/blob/master/src/Mime/Type.php">the mm\Mime\Type class</a>.</p>
<pre><code class="language-php">// models/Files.php

class Files extends \lithium\data\Model {
	protected $_meta = ['source' =&gt; 'fs.files'];

	public function mimeType($entity) {
		return 'image/png';
	}
}
</code></pre>
<p>Now this is where we actually serve the file. We'll be reusing the <code>md5</code> field as the entity tag. MongoDB automatically adds that field as the checksum over the contents of the file. The entity tag is <strong>wrapped in quotes</strong> so be sure to strip them off before comparing. Also we must include the entity tag on <strong>both</strong> 200 and 304 responses.</p>
<pre><code class="language-php">// config/bootstrap/routes.php

use lithium\net\http\Router;
use lithium\action\Response;
use app\models\Files;

Router::connect('/files/{:id:[0-9a-f]{24}}.{:type}', [], function($request) {
	if (!$file = Files::first($request-&gt;id)) {
		return new Response(['status' =&gt; 404]);
	}
	$response = new Response();

	$hash = $file-&gt;md5;
	$condition = trim($request-&gt;get('http:if_none_match'), '"');

	$response-&gt;headers['ETag'] = "\"{$hash}\"";

	if ($condition === $hash) {
		$response-&gt;status(304);
	} else {
		$response-&gt;headers += [
			'Content-Length' =&gt; $file-&gt;file-&gt;getSize(),
			'Content-Type' =&gt; $file-&gt;mimeType(),
		];
		$response-&gt;body = $file-&gt;file-&gt;getBytes();
	}
	return $response;
});
</code></pre>
<p>As you will see the pattern of generating, adding and comparing the entity tag will not change much throughout the next example below and basically stays the same.</p>
<h2><a id="serving-dynamic-content" class="anchor" href="#serving-dynamic-content">Serving Dynamic Content</a></h2>
<p>This example will enable caching for any possibly dynamically generated content by adding a filter to <code>Dispatcher::run()</code>. While this is a pretty bulletproof it is also not the most performant solution as we are generating the entity tag over the full body which in turn needs to be always rendered.</p>
<p>A better solution would be to generate the tag over the data used in the body (see above) and intercept the cycle right before the template is fully rendered. Feel free to post your solution in the comments.</p>
<pre><code class="language-php">// config/bootstrap/action.php

use lithium\action\Dispatcher;

Dispatcher::applyFilter('run', function($self, $params, $chain) {
	$request  = $params['request'];
	$response = $chain-&gt;next($self, $params, $chain);

	$hash = md5($response-&gt;body());
	$condition = trim($request-&gt;get('http:if_none_match'), '"');

	$response-&gt;headers['ETag'] = "\"{$hash}\"";

	if ($condition === $hash) {
		$response-&gt;status(304);
		$response-&gt;body = [];
	}
	return $response;
});
</code></pre>
<h2><a id="interacting-with-a-service" class="anchor" href="#interacting-with-a-service">Interacting with a Service</a></h2>
<p>In this case we are retrieving the latest commits from the li3 GitHub repository. As GitHub has a pretty tight rate limit in place this seems to be a good idea.</p>
<pre><code class="language-php">use lithium\data\Connections;
use lithium\storage\Cache;

Connections::add("github", [
   'scheme' =&gt; 'https',
   'type' =&gt; 'lithium\net\http\Service',
   'host' =&gt; 'api.github.com'
]);
$github = Connections::get("github");
$path = 'repos/unionofrad/lithium/commits';

$cacheKey = 'api_github_com_' . str_replace('/', '_', $path);

$options = ['return' =&gt; true];
if ($cached = Cache::read('default', $cacheKey)) {
	$options['headers']['If-None-Match'] = "\"{$cached['condition']}\"";
}
$response = $github-&gt;get($path, ['type' =&gt; 'json'], $options);

if ($response-&gt;status('code') == 304) {
	return $cached['body'];
}
$condition = trim($response-&gt;headers['ETag'], '"');
$body = $response-&gt;body();

Cache::write('default', $cacheKey, compact('condition', 'body'));
return $body;
</code></pre>
<p>This time we act as the client to the GitHub service, which now has to handle all the entity tag generation and validation. On the other hand we are burdened with the task of providing persistent caching of the response and the entity tag that comes with.</p>
<h2><a id="sources" class="anchor" href="#sources">Sources</a></h2>
<ul>
<li><a href="http://tools.ietf.org/html/rfc2616#section-13">RFC 2616 - Caching in HTTP</a></li>
<li><a href="http://tools.ietf.org/html/rfc2616#section-14.44">RFC 2616 - ETag</a></li>
<li><a href="http://tools.ietf.org/html/rfc2616#section-14.26">RFC 2616 - If None Match</a></li>
<li><a href="http://www.mongodb.org/display/DOCS/GridFS+Specification">MongoDB GridFS</a></li>
<li><a href="http://en.wikipedia.org/wiki/HTTP_ETag">Wikipedia on HTTP ETag</a></li>
<li><a href="http://www.dehora.net/journal/2007/07/earned_value.html">Design for the web</a></li>
<li><a href="http://www.tbray.org/ongoing/When/200x/2007/07/31/Design-for-the-Web">About: Design for the web</a></li>
<li><a href="http://www.mnot.net/blog/2007/08/07/etags">Pitfalls of ETags</a></li>
<li><a href="http://tomayko.com/writings/things-caches-do">Things caches do</a></li>
<li><a href="http://www.mnot.net/cache_docs/">Controlling Caches/Tutorial</a></li>
<li><a href="http://php.net/manual/en/intro.fileinfo.php">PHP Fileinfo</a></li>
<li><a href="https://github.com/davidpersson/mm">MM - the PHP media library</a></li>
<li><a href="http://tools.ietf.org/html/rfc2616#section-14.44">RFC 2616 - Vary</a></li>
<li><a href="http://tools.ietf.org/html/rfc2616#section-14.19">RFC 2616 - Cache-Control</a></li>
<li><a href="http://www.w3.org/Protocols/HTTP/1.1/rfc2616bis/issues/#i71">How to compare Weak Entity Tags</a></li>
<li><a href="http://greenbytes.de/tech/webdav/draft-reschke-http-etag-on-write-latest.html">Problems with Entity Tags On Write</a></li>
</ul>
	</div>
</article>			</div>
		</div>
		<footer class="main">
	<div class="area"></div>
	<div class="area"></div>
	<div class="area"></div>
	<div class="area"></div>

	<div class="social">
		<a href="https://github.com/unionofrad" target="new">GitHub</a>		<span class="separator">/</span>
		<a href="https://twitter.com/unionofrad" target="new">Twitter</a>		<span class="separator">/</span>
		<a href="http://www.reddit.com/r/li3" target="new">Reddit</a>		<span class="separator">/</span>
		<a href="https://stackoverflow.com/questions/tagged/lithium" target="new">Stack Overflow</a>	</div>
	<div class="testimonial">
		<img src="/assets/v:__PROJECT_VERSION_BUILD__xyzz/img/testimonials/10.png" alt="Testimonial Image" />		<p>I think it's time you started<br />
writing better code.</p>
	</div>
	<div class="copyright">
		Pretty much everything is (c) 2009-2024 and beyond, the <a href="http://unionofrad.org">Union of RAD</a>.	</div>
</footer>	</body>
</body>
</html>
