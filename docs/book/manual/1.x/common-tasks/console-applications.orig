<!doctype html>
<html lang="en">
<head>
	<meta charset="UTF-8" />	<title>Console Applications – li₃: The Definitive Guide v1.x – Documentation – li3 PHP-Framework</title>
		<link rel="stylesheet" href="/assets/v:__PROJECT_VERSION_BUILD__xyzz/css/reset.css" />
	<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Anonymous+Pro:400,700,400italic,700italic" />
	<link rel="stylesheet" href="/assets/v:__PROJECT_VERSION_BUILD__xyzz/css/u1m.css" />
	<link rel="stylesheet" href="/assets/v:__PROJECT_VERSION_BUILD__xyzz/css/li3_docs.css" />
	<link rel="stylesheet" href="/assets/v:__PROJECT_VERSION_BUILD__xyzz/css/highlight.css" />
	
	
	<script src="//cdnjs.cloudflare.com/ajax/libs/require.js/2.1.10/require.min.js"></script>
	<script src="/assets/v:__PROJECT_VERSION_BUILD__xyzz/js/base.js"></script>
	<script src="//cdnjs.cloudflare.com/ajax/libs/prism/0.0.1/prism.min.js"></script>
	
	
	<link rel="icon" href="/assets/ico/site.png">

		<script>
	  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
	  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
	  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
	  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

	  ga('create', 'UA-11048416-4', 'auto');
	  ga('send', 'pageview');
	</script>
	</head>
<body class="layout-default li3-docs">
		<div id="container">
			<header class="main">
	<div class="left">
		<h1><a href="/" class="li3-logo">li3</a></h1>
	</div>
	<div class="right">
		<nav class="main-nav"><a href="http://news.li3.me">News</a><a href="/docs" class="active">Documentation</a><a href="/versions">Versions</a><a href="/present">Presentations</a><a href="/support">Community</a><a href="/development">Development</a></nav>	</div>
</header>							<nav class="crumbs">
	<ul itemscope itemtype="http://schema.org/BreadcrumbList">
			<li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
			<meta itemprop="position" content="1" />
							<a href="/docs" itemscope itemprop="item" itemtype="http://schema.org/Thing"><span itemprop="name">Documentation</span></a>
					</li>
			<li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
			<meta itemprop="position" content="2" />
							<a href="/docs/book/manual/1.x" itemscope itemprop="item" itemtype="http://schema.org/Thing"><span itemprop="name">li₃: The Definitive Guide (1.x)</span></a>
					</li>
			<li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
			<meta itemprop="position" content="3" />
							<a href="/docs/book/manual/1.x/common-tasks" itemscope itemprop="item" itemtype="http://schema.org/Thing"><span itemprop="name">Common Tasks</span></a>
					</li>
			<li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
			<meta itemprop="position" content="4" />
							<span itemscope itemprop="item" itemtype="http://schema.org/Thing">
					<span itemprop="name">Console Applications</span>
				</span>
					</li>
		</ul>
</nav>						<div id="content">
				<article class="books-view has-aside-right">
	<nav class="aside aside-right">
		<h3 class="h-gamma">Contents</h3>
		<ul><li><a href="/docs/book/manual/1.x/common-tasks" class="">Common Tasks</a><ul><li><a href="/docs/book/manual/1.x/common-tasks/logging" class="">Logging</a><li><a href="/docs/book/manual/1.x/common-tasks/plugins" class="">Plugins</a><li><a href="/docs/book/manual/1.x/common-tasks/error-handling" class="">Error Handling</a><li><a href="/docs/book/manual/1.x/common-tasks/caching" class="">Caching</a><li><a href="/docs/book/manual/1.x/common-tasks/filters" class="">Filters</a><li><a href="/docs/book/manual/1.x/common-tasks/etags" class="">Etags</a><li><a href="/docs/book/manual/1.x/common-tasks/globalization" class="">Globalization</a><li><a href="/docs/book/manual/1.x/common-tasks/simple-authentication" class="">Simple Authentication</a><li><a href="/docs/book/manual/1.x/common-tasks/simple-auth-user" class="">Simple Auth User</a><li><a href="/docs/book/manual/1.x/common-tasks/console-applications" class="active">Console Applications</a></ul><li><a href="/docs/book/manual/1.x/appendices" class="">Appendices</a><ul><li><a href="/docs/book/manual/1.x/appendices/faqs" class="">FAQs</a><li><a href="/docs/book/manual/1.x/appendices/using-in-other-applications" class="">Using In Other Applications</a></ul><li><a href="/docs/book/manual/1.x/quickstart" class="">Quickstart</a><li><a href="/docs/book/manual/1.x/controllers" class="">Controllers</a><ul><li><a href="/docs/book/manual/1.x/controllers/actions" class="">Actions</a><li><a href="/docs/book/manual/1.x/controllers/flow-control" class="">Flow Control</a><li><a href="/docs/book/manual/1.x/controllers/parameters" class="">Parameters</a><li><a href="/docs/book/manual/1.x/controllers/type-rendering-detection" class="">Type Rendering Detection</a><li><a href="/docs/book/manual/1.x/controllers/routing" class="">Routing</a></ul><li><a href="/docs/book/manual/1.x/installation" class="">Installation</a><ul><li><a href="/docs/book/manual/1.x/installation/requirements" class="">Requirements</a><li><a href="/docs/book/manual/1.x/installation/troubleshooting" class="">Troubleshooting</a><li><a href="/docs/book/manual/1.x/installation/web-servers" class="">Web Servers</a></ul><li><a href="/docs/book/manual/1.x/architecture" class="">Architecture</a><ul><li><a href="/docs/book/manual/1.x/architecture/file-structure" class="">File Structure</a><li><a href="/docs/book/manual/1.x/architecture/response-lifecycle" class="">Response Lifecycle</a><li><a href="/docs/book/manual/1.x/architecture/aop" class="">AOP</a><li><a href="/docs/book/manual/1.x/architecture/mvc" class="">MVC</a><li><a href="/docs/book/manual/1.x/architecture/objects" class="">Objects</a></ul><li><a href="/docs/book/manual/1.x/quality-code" class="">Quality Code</a><ul><li><a href="/docs/book/manual/1.x/quality-code/fixtures" class="">Fixtures</a><li><a href="/docs/book/manual/1.x/quality-code/analysis" class="">Analysis</a><li><a href="/docs/book/manual/1.x/quality-code/testing" class="">Testing</a><li><a href="/docs/book/manual/1.x/quality-code/security" class="">Security</a></ul><li><a href="/docs/book/manual/1.x/configuration" class="">Configuration</a><ul><li><a href="/docs/book/manual/1.x/configuration/environment" class="">Environment</a><li><a href="/docs/book/manual/1.x/configuration/bootstrapping" class="">Bootstrapping</a><li><a href="/docs/book/manual/1.x/configuration/third-party-libraries" class="">Third Party Libraries</a></ul><li><a href="/docs/book/manual/1.x/views" class="">Views</a><ul><li><a href="/docs/book/manual/1.x/views/layouts" class="">Layouts</a><li><a href="/docs/book/manual/1.x/views/elements" class="">Elements</a><li><a href="/docs/book/manual/1.x/views/helpers" class="">Helpers</a><li><a href="/docs/book/manual/1.x/views/static-content" class="">Static Content</a><li><a href="/docs/book/manual/1.x/views/auto-escaping" class="">Auto Escaping</a></ul><li><a href="/docs/book/manual/1.x/models" class="">Models</a><ul><li><a href="/docs/book/manual/1.x/models/mongodb" class="">Mongodb</a><li><a href="/docs/book/manual/1.x/models/meta" class="">Meta</a><li><a href="/docs/book/manual/1.x/models/relationships" class="">Relationships</a><li><a href="/docs/book/manual/1.x/models/saving" class="">Saving</a><li><a href="/docs/book/manual/1.x/models/using-data-sources" class="">Using Data Sources</a><li><a href="/docs/book/manual/1.x/models/adding-functions" class="">Adding Functions</a><li><a href="/docs/book/manual/1.x/models/data-mutation" class="">Data Mutation</a><li><a href="/docs/book/manual/1.x/models/connections" class="">Connections</a><li><a href="/docs/book/manual/1.x/models/creating-data-sources" class="">Creating Data Sources</a><li><a href="/docs/book/manual/1.x/models/querying" class="">Querying</a><li><a href="/docs/book/manual/1.x/models/validation" class="">Validation</a></ul></ul>	</nav>
	<div class="body">
		<h1><a id="console-applications" class="anchor" href="#console-applications">Console Applications</a></h1>
<p>Console applications in li3 allow you to access your application
infrastructure from the command line. The <code>Console</code> libraries li3
features also allow you to perform oft-used features in a shell
environment.</p>
<h1><a id="the-code-li3-code-shell-command" class="anchor" href="#the-code-li3-code-shell-command">The <code>li3</code> Shell Command</a></h1>
<p>Before we get started, you'll want to make sure that your shell knows
where the <code>li3</code> command is.</p>
<p>If my li3 installation was at <code>/usr/local/lithium</code>, I'd add the
following to my Bash configuration to make sure the <code>li3</code> command was
universally available to me:</p>
<pre><code class="language-bash">PATH=$PATH:/usr/local/lithium/console
</code></pre>
<h1><a id="creating-a-new-command" class="anchor" href="#creating-a-new-command">Creating a new Command</a></h1>
<p>User-defined commands are located in <code>extensions/command</code> by
default. Let's create a simple application that list the repositories of
a given organization.</p>
<p>First, create the new file at <code>extensions/command/Repos.php</code>. This
is what we'll start with:</p>
<pre><code class="language-php">namespace app\extensions\command;

class Repos extends \lithium\console\Command {}
</code></pre>
<p>If you run <code>$ li3</code> now, you'll see that li3 can already see your
command. Look towards the end of the output, just after "COMMANDS via
app."</p>
<pre><code class="language-text">COMMANDS via app
    repos
</code></pre>
<p>If you document the Repos class with a comment, it will be shown when
li3 is executed without any arguments.</p>
<h1><a id="command-i-o" class="anchor" href="#command-i-o">Command I/O</a></h1>
<p>By default, the <code>run()</code> method of your newly created Command is called
when a user executes <code>li3 &lt;command name&gt;</code> from a shell. The easiest way
to get input from a user is via command-line arguments. Arguments passed
to the Command are supplied as arguments to <code>run()</code>.</p>
<pre><code class="language-php">namespace app\extensions\command;

class Repos extends \lithium\console\Command {

  public function run($org = '') {
    echo "Org: $org\n";
  }
}
</code></pre>
<p>You can also use <code>in()</code> to ask the user for input:</p>
<pre><code class="language-php">namespace app\extensions\command;

class Repos extends \lithium\console\Command {
  public function run($org = '') {
    if($org == '') {
      $org = $this-&gt;in("Organization?");
    }
    echo "Org: $org\n";
  }
}
</code></pre>
<p>And rather than using <code>echo</code> to send output to the user, we can use
<code>out()</code> or <code>error()</code> to send to STDOUT and STDERR. Apart from adding
newlines automatically, these methods can also send colored output by using style tags.</p>
<pre><code class="language-php">namespace app\extensions\command;

class Repos extends \lithium\console\Command {
  public function run($org = '') {
    if($org == '') {
      $this-&gt;error("{:red}No organization supplied.{:end}");
      $org = $this-&gt;in("Organization?");
    }
    $this-&gt;out("{:green}Org: $org{:end}");
  }
}
</code></pre>
<h1><a id="adding-functionality" class="anchor" href="#adding-functionality">Adding Functionality</a></h1>
<p>Finally, let's add a bit of functionality to interact with the GitHub
API. Because we have full access to li3 classes, we declare them via
<code>uses</code> above the class definition like we normally would and use those
classes in our Command logic:</p>
<pre><code class="language-php">namespace app\extensions\command;

use lithium\net\http\Service;

class Repos extends \lithium\console\Command {
  public function run($org = '') {
    if($org == '') {
      $this-&gt;error("{:red}No organization supplied.{:end}");
      $org = $this-&gt;in("Organization?");
    }
    $this-&gt;out("{:green}Org: $org{:end}");

    $service = new Service([
      'scheme' =&gt; 'https',
      'host'   =&gt; 'api.github.com'
    ]);

    $repos = $service-&gt;get('/orgs/' . $org . '/repos');
    $this-&gt;header("$org Repos:");
    foreach($repos as $repo) {
      $this-&gt;out($repo['full_name']);
    }
  }
}
</code></pre>
<p>Here's a sample of the output:</p>
<pre><code class="language-bash">$ li3 repos UnionOfRad
</code></pre>
<pre><code class="language-text">Org: UnionOfRad
/-----------------
UnionOfRad Repos:
/-----------------
UnionOfRAD/phpca
UnionOfRAD/li3_sqlsrv
UnionOfRAD/framework
UnionOfRAD/li3_docs
UnionOfRAD/lithium_bin
UnionOfRAD/li3_design
UnionOfRAD/manual
UnionOfRAD/lithium
UnionOfRAD/li3_qa
UnionOfRAD/li3_cldr
UnionOfRAD/li3_lab
UnionOfRAD/li3_bot
UnionOfRAD/li3_lldr
UnionOfRAD/li3_quality
UnionOfRAD/li3_queue
UnionOfRAD/sphere
UnionOfRAD/li3_couchbase
UnionOfRAD/li3_sqltools
UnionOfRAD/li3_fixtures
</code></pre>
	</div>
</article>			</div>
		</div>
		<footer class="main">
	<div class="area"></div>
	<div class="area"></div>
	<div class="area"></div>
	<div class="area"></div>

	<div class="social">
		<a href="https://github.com/unionofrad" target="new">GitHub</a>		<span class="separator">/</span>
		<a href="https://twitter.com/unionofrad" target="new">Twitter</a>		<span class="separator">/</span>
		<a href="http://www.reddit.com/r/li3" target="new">Reddit</a>		<span class="separator">/</span>
		<a href="https://stackoverflow.com/questions/tagged/lithium" target="new">Stack Overflow</a>	</div>
	<div class="testimonial">
		<img src="/assets/v:__PROJECT_VERSION_BUILD__xyzz/img/testimonials/10.png" alt="Testimonial Image" />		<p>I think it's time you started<br />
writing better code.</p>
	</div>
	<div class="copyright">
		Pretty much everything is (c) 2009-2024 and beyond, the <a href="http://unionofrad.org">Union of RAD</a>.	</div>
</footer>	</body>
</body>
</html>
