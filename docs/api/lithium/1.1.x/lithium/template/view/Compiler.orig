<!doctype html>
<html lang="en">
<head>
	<meta charset="UTF-8" />	<title>lithium\template\view\Compiler – Framework API v1.1.x – Documentation – li3 PHP-Framework</title>
		<link rel="stylesheet" href="/assets/v:__PROJECT_VERSION_BUILD__xyzz/css/reset.css" />
	<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Anonymous+Pro:400,700,400italic,700italic" />
	<link rel="stylesheet" href="/assets/v:__PROJECT_VERSION_BUILD__xyzz/css/u1m.css" />
	<link rel="stylesheet" href="/assets/v:__PROJECT_VERSION_BUILD__xyzz/css/li3_docs.css" />
	<link rel="stylesheet" href="/assets/v:__PROJECT_VERSION_BUILD__xyzz/css/highlight.css" />
	
	
	<script src="//cdnjs.cloudflare.com/ajax/libs/require.js/2.1.10/require.min.js"></script>
	<script src="/assets/v:__PROJECT_VERSION_BUILD__xyzz/js/base.js"></script>
	<script src="//cdnjs.cloudflare.com/ajax/libs/prism/0.0.1/prism.min.js"></script>
	
	
	<link rel="icon" href="/assets/ico/site.png">

		<script>
	  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
	  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
	  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
	  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

	  ga('create', 'UA-11048416-4', 'auto');
	  ga('send', 'pageview');
	</script>
	</head>
<body class="layout-default li3-docs">
		<div id="container">
			<header class="main">
	<div class="left">
		<h1><a href="/" class="li3-logo">li3</a></h1>
	</div>
	<div class="right">
		<nav class="main-nav"><a href="http://news.li3.me">News</a><a href="/docs" class="active">Documentation</a><a href="/versions">Versions</a><a href="/present">Presentations</a><a href="/support">Community</a><a href="/development">Development</a></nav>	</div>
</header>							<nav class="crumbs">
	<ul itemscope itemtype="http://schema.org/BreadcrumbList">
			<li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
			<meta itemprop="position" content="1" />
							<a href="/docs" itemscope itemprop="item" itemtype="http://schema.org/Thing"><span itemprop="name">Documentation</span></a>
					</li>
			<li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
			<meta itemprop="position" content="2" />
							<a href="/docs/api/lithium/1.1.x/lithium" itemscope itemprop="item" itemtype="http://schema.org/Thing"><span itemprop="name">Framework API (1.1.x)</span></a>
					</li>
			<li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
			<meta itemprop="position" content="3" />
							<a href="/docs/api/lithium/1.1.x/lithium" itemscope itemprop="item" itemtype="http://schema.org/Thing"><span itemprop="name">lithium</span></a>
					</li>
			<li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
			<meta itemprop="position" content="4" />
							<a href="/docs/api/lithium/1.1.x/lithium/template" itemscope itemprop="item" itemtype="http://schema.org/Thing"><span itemprop="name">template</span></a>
					</li>
			<li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
			<meta itemprop="position" content="5" />
							<a href="/docs/api/lithium/1.1.x/lithium/template/view" itemscope itemprop="item" itemtype="http://schema.org/Thing"><span itemprop="name">view</span></a>
					</li>
			<li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
			<meta itemprop="position" content="6" />
							<span itemscope itemprop="item" itemtype="http://schema.org/Thing">
					<span itemprop="name">Compiler</span>
				</span>
					</li>
		</ul>
</nav>						<div id="content">
				<article class="apis-view has-aside-right">

	<nav class="aside aside-right">
			<h3 class="h-gamma">Contents</h3>
		<ul>
			<li class="nav-up"><a href="/docs/api/lithium/1.1.x/lithium/template/view" rel="up">../</a>		</ul>
	
													
						<h3 class="h-gamma">Methods</h3>
			<ul>
												<li class="method public">
				<a href="/docs/api/lithium/1.1.x/lithium/template/view/Compiler::template()">template()</a>												<li class="method public">
				<a href="/docs/api/lithium/1.1.x/lithium/template/view/Compiler::compile()">compile()</a>												<li class="method public inherited">
				<a href="/docs/api/lithium/1.1.x/lithium/core/StaticObject::invokeMethod()">invokeMethod()</a>												<li class="method public inherited">
				<a href="/docs/api/lithium/1.1.x/lithium/core/StaticObject::respondsTo()">respondsTo()</a>												<li class="method protected inherited">
				<a href="/docs/api/lithium/1.1.x/lithium/core/StaticObject::_instance()">_instance()</a>												<li class="method protected inherited">
				<a href="/docs/api/lithium/1.1.x/lithium/core/StaticObject::_parents()">_parents()</a>												<li class="method protected inherited">
				<a href="/docs/api/lithium/1.1.x/lithium/core/StaticObject::_stop()">_stop()</a>												<li class="method public deprecated inherited">
				<a href="/docs/api/lithium/1.1.x/lithium/core/StaticObject::applyFilter()">applyFilter()</a>												<li class="method protected deprecated inherited">
				<a href="/docs/api/lithium/1.1.x/lithium/core/StaticObject::_filter()">_filter()</a>							</ul>
								<h3 class="h-gamma">Properties</h3>
			<ul>
												<li class="property protected">
				<a href="/docs/api/lithium/1.1.x/lithium/template/view/Compiler::$_processors">$_processors</a>												<li class="property protected inherited">
				<a href="/docs/api/lithium/1.1.x/lithium/core/StaticObject::$_parents">$_parents</a>												<li class="property protected deprecated inherited">
				<a href="/docs/api/lithium/1.1.x/lithium/core/StaticObject::$_methodFilters">$_methodFilters</a>							</ul>
						</nav>
	<div class="body">
			<h1 class="h-alpha">
		<a href="/docs/api/lithium/1.1.x/lithium" class="symbol-segment">lithium</a>\<a href="/docs/api/lithium/1.1.x/lithium/template" class="symbol-segment">template</a>\<a href="/docs/api/lithium/1.1.x/lithium/template/view" class="symbol-segment">view</a>\Compiler		</h1>

		<section class="under">
													<div class="extends">
					<span class="extends__title">Extends</span>
											<a href="/docs/api/lithium/1.1.x/lithium/core/StaticObject" class="extends__symbol">lithium\core\StaticObject</a>									</div>
									<div class="tags">
																<span class="tag">class</span>
			</div>
		</section>

					
			<section>
									<div class="summary">
						<p>The template compiler is a simple string replacement engine which allows PHP templates to be
overridden with custom syntax. The default process rules allow PHP templates using short-echo
syntax (<code>&lt;?=</code>) to be rewritten to full PHP tags which automatically escape their output.</p>
					</div>
				
									<div class="description">
						<p>It is possible to create your own template compiler and have the chosen <code>View</code> adapter use that
instead. Please see the documentation on the dynamic dependencies of the adapter in question
to know more about how this can be achieved.</p>
					</div>
							</section>

			
			
			
						<section id="related">
				<h3 class="h-beta">Related</h3>
				<ul class="related">
									<li><a href="/docs/api/lithium/1.1.x/lithium/template/View">lithium\template\View</a>									<li><a href="/docs/api/lithium/1.1.x/lithium/template/view/adapter">lithium\template\view\adapter</a>								</ul>
			</section>
			
			
			
						<section id="source" class="section">
				<h3 class="h-beta">Source</h3>
				<div id="source" class="source-display">
					<div class="source-wrapper">
						<pre class="source-code"><code class="language-php">class Compiler extends \lithium\core\StaticObject {

	/**
	 * The list of syntax replacements to apply to compiled templates.
	 *
	 * Key/value pairs of regular expressions. The keys are the regexes, and the values are the
	 * resulting expressions along with any capture groups that may have been used in the
	 * corresponding regexes.
	 *
	 * @var array
	 */
	protected static $_processors = [
		&#039;/\&lt;\?=\s*\$this-&gt;(.+?)\s*;?\s*\?&gt;/msx&#039; =&gt; &#039;&lt;?php echo $this-&gt;$1; ?&gt;&#039;,
		&#039;/\&lt;\?=\s*(\$h\(.+?)\s*;?\s*\?&gt;/msx&#039; =&gt; &#039;&lt;?php echo $1; ?&gt;&#039;,
		&#039;/\&lt;\?=\s*(.+?)\s*;?\s*\?&gt;/msx&#039; =&gt; &#039;&lt;?php echo $h($1); ?&gt;&#039;
	];

	/**
	 * Compiles a template and writes it to a cache file, which is used for inclusion.
	 *
	 * @param string $file The full path to the template that will be compiled.
	 * @param array $options Options for compilation include:
	 *        - `path`: Path where the compiled template should be written.
	 *        - `fallback`: Boolean indicating that if the compilation failed for some
	 *                      reason (e.g. `path` is not writable), that the compiled template
	 *                      should still be returned and no exception be thrown.
	 * @return string The compiled template.
	 */
	public static function template($file, array $options = []) {
		$cachePath = Libraries::get(true, &#039;resources&#039;) . &#039;/tmp/cache/templates&#039;;
		$defaults = [&#039;path&#039; =&gt; $cachePath, &#039;fallback&#039; =&gt; false];
		$options += $defaults;

		$stats = stat($file);

		$oname  = basename(dirname($file)) . &#039;_&#039; . basename($file, &#039;.php&#039;);
		$oname .= &#039;_&#039; . ($stats[&#039;ino&#039;] ?: hash(&#039;md5&#039;, $file));

		$template = &quot;template_{$oname}_{$stats[&#039;mtime&#039;]}_{$stats[&#039;size&#039;]}.php&quot;;
		$template = &quot;{$options[&#039;path&#039;]}/{$template}&quot;;

		if (file_exists($template)) {
			return $template;
		}
		$compiled = static::compile(file_get_contents($file));

		if (is_writable($cachePath) &amp;&amp; file_put_contents($template, $compiled) !== false) {
			foreach (glob(&quot;{$options[&#039;path&#039;]}/template_{$oname}_*.php&quot;, GLOB_NOSORT) as $expired) {
				if ($expired !== $template) {
					unlink($expired);
				}
			}
			return $template;
		}
		if ($options[&#039;fallback&#039;]) {
			return $file;
		}
		throw new TemplateException(&quot;Could not write compiled template `{$template}` to cache.&quot;);
	}

	/**
	 * Preprocess the passed `$string` (usually a PHP template) for syntax replacements
	 * using sets of regular expressions.
	 *
	 * @see lithium\template\view\Compiler::$_processors
	 * @param string $string The string to be preprocessed.
	 * @return string Processed string.
	 */
	public static function compile($string) {
		$patterns = static::$_processors;
		return preg_replace(array_keys($patterns), array_values($patterns), $string);
	}
}</code></pre>
					</div>
				</div>
			</section>
							</div>
	</article>			</div>
		</div>
		<footer class="main">
	<div class="area"></div>
	<div class="area"></div>
	<div class="area"></div>
	<div class="area"></div>

	<div class="social">
		<a href="https://github.com/unionofrad" target="new">GitHub</a>		<span class="separator">/</span>
		<a href="https://twitter.com/unionofrad" target="new">Twitter</a>		<span class="separator">/</span>
		<a href="http://www.reddit.com/r/li3" target="new">Reddit</a>		<span class="separator">/</span>
		<a href="https://stackoverflow.com/questions/tagged/lithium" target="new">Stack Overflow</a>	</div>
	<div class="testimonial">
		<img src="/assets/v:__PROJECT_VERSION_BUILD__xyzz/img/testimonials/10.png" alt="Testimonial Image" />		<p>I think it's time you started<br />
writing better code.</p>
	</div>
	<div class="copyright">
		Pretty much everything is (c) 2009-2024 and beyond, the <a href="http://unionofrad.org">Union of RAD</a>.	</div>
</footer>	</body>
</body>
</html>
