<!doctype html>
<html lang="en">
<head>
	<meta charset="UTF-8" />	<title>lithium\analysis\Inspector::info() – Framework API v1.3.x – Documentation – li3 PHP-Framework</title>
		<link rel="stylesheet" href="/assets/v:__PROJECT_VERSION_BUILD__xyzz/css/reset.css" />
	<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Anonymous+Pro:400,700,400italic,700italic" />
	<link rel="stylesheet" href="/assets/v:__PROJECT_VERSION_BUILD__xyzz/css/u1m.css" />
	<link rel="stylesheet" href="/assets/v:__PROJECT_VERSION_BUILD__xyzz/css/li3_docs.css" />
	<link rel="stylesheet" href="/assets/v:__PROJECT_VERSION_BUILD__xyzz/css/highlight.css" />
	
	
	<script src="//cdnjs.cloudflare.com/ajax/libs/require.js/2.1.10/require.min.js"></script>
	<script src="/assets/v:__PROJECT_VERSION_BUILD__xyzz/js/base.js"></script>
	<script src="//cdnjs.cloudflare.com/ajax/libs/prism/0.0.1/prism.min.js"></script>
	
	
	<link rel="icon" href="/assets/ico/site.png">

		<script>
	  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
	  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
	  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
	  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

	  ga('create', 'UA-11048416-4', 'auto');
	  ga('send', 'pageview');
	</script>
	</head>
<body class="layout-default li3-docs">
		<div id="container">
			<header class="main">
	<div class="left">
		<h1><a href="/" class="li3-logo">li3</a></h1>
	</div>
	<div class="right">
		<nav class="main-nav"><a href="http://news.li3.me">News</a><a href="/docs" class="active">Documentation</a><a href="/versions">Versions</a><a href="/present">Presentations</a><a href="/support">Community</a><a href="/development">Development</a></nav>	</div>
</header>							<nav class="crumbs">
	<ul itemscope itemtype="http://schema.org/BreadcrumbList">
			<li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
			<meta itemprop="position" content="1" />
							<a href="/docs" itemscope itemprop="item" itemtype="http://schema.org/Thing"><span itemprop="name">Documentation</span></a>
					</li>
			<li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
			<meta itemprop="position" content="2" />
							<a href="/docs/api/lithium/1.3.x/lithium" itemscope itemprop="item" itemtype="http://schema.org/Thing"><span itemprop="name">Framework API (1.3.x)</span></a>
					</li>
			<li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
			<meta itemprop="position" content="3" />
							<a href="/docs/api/lithium/1.3.x/lithium" itemscope itemprop="item" itemtype="http://schema.org/Thing"><span itemprop="name">lithium</span></a>
					</li>
			<li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
			<meta itemprop="position" content="4" />
							<a href="/docs/api/lithium/1.3.x/lithium/analysis" itemscope itemprop="item" itemtype="http://schema.org/Thing"><span itemprop="name">analysis</span></a>
					</li>
			<li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
			<meta itemprop="position" content="5" />
							<a href="/docs/api/lithium/1.3.x/lithium/analysis/Inspector" itemscope itemprop="item" itemtype="http://schema.org/Thing"><span itemprop="name">Inspector</span></a>
					</li>
			<li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
			<meta itemprop="position" content="6" />
							<span itemscope itemprop="item" itemtype="http://schema.org/Thing">
					<span itemprop="name">info()</span>
				</span>
					</li>
		</ul>
</nav>						<div id="content">
				<article class="apis-view has-aside-right">

	<nav class="aside aside-right">
			<h3 class="h-gamma">Contents</h3>
		<ul>
			<li class="nav-up"><a href="/docs/api/lithium/1.3.x/lithium/analysis/Inspector" rel="up">../</a>		</ul>
	
													
										</nav>
	<div class="body">
			<h1 class="h-alpha">
		<a href="/docs/api/lithium/1.3.x/lithium" class="symbol-segment">lithium</a>\<a href="/docs/api/lithium/1.3.x/lithium/analysis" class="symbol-segment">analysis</a>\<a href="/docs/api/lithium/1.3.x/lithium/analysis/Inspector" class="symbol-segment">Inspector</a>::info()		</h1>

		<section class="under">
															<div class="tags">
													<span class="tag public">public</span>
													<span class="tag">static</span>
								<span class="tag">method</span>
			</div>
		</section>

					
			<section>
									<div class="summary">
						<p>Detailed source code identifier analysis.</p>
					</div>
				
									<div class="description">
						<p>Analyzes a passed $identifier for more detailed information such
as method/property modifiers (e.g. <code>public</code>, <code>private</code>, <code>abstract</code>)</p>
					</div>
							</section>

						<section id="params">
				<h3 class="h-beta">Parameters</h3>
				<ul class="parameters">
											<li>
							<span class="type">string</span>
							<code class="name">$identifier</code>
															<span class="parameter">
									<p>The identifier to be analyzed</p>
								</span>
													</li>
											<li>
							<span class="type">array</span>
							<code class="name">$info</code>
															<span class="parameter">
									<p>Optionally restrict or expand the default information
returned from the <code>info</code> method. By default, the information returned
is the same as the array keys contained in the <code>$_methodMap</code> property of
Inspector.</p>
								</span>
													</li>
									</ul>
			</section>
			
						<section id="return">
				<h3 class="h-beta">Returns</h3>
				<span class="type">array</span>
									<span class="return">
						<p>An array of the parsed meta-data information of the given identifier.</p>
					</span>
							</section>
			
			
			
			
			
						<section id="source" class="section">
				<h3 class="h-beta">Source</h3>
				<div id="source" class="source-display">
					<div class="source-wrapper">
						<pre class="source-code"><code class="language-php">	public static function info($identifier, $info = []) {
		$info = $info ?: array_keys(static::$_methodMap);
		$type = static::type($identifier);
		$result = [];
		$class = null;

		if ($type === &#039;method&#039; || $type === &#039;property&#039;) {
			list($class, $identifier) = explode(&#039;::&#039;, $identifier);

			try {
				$classInspector = new ReflectionClass($class);
			} catch (Exception $e) {
				return null;
			}

			if ($type === &#039;property&#039;) {
				$identifier = substr($identifier, 1);
				$accessor = &#039;getProperty&#039;;
			} else {
				$identifier = str_replace(&#039;()&#039;, &#039;&#039;, $identifier);
				$accessor = &#039;getMethod&#039;;
			}

			try {
				$inspector = $classInspector-&gt;{$accessor}($identifier);
			} catch (Exception $e) {
				return null;
			}
			$result[&#039;modifiers&#039;] = static::_modifiers($inspector);
		} elseif ($type === &#039;class&#039;) {
			$inspector = new ReflectionClass($identifier);
			$classInspector = null;
		} else {
			return null;
		}

		foreach ($info as $key) {
			if (!isset(static::$_methodMap[$key])) {
				continue;
			}
			if (method_exists($inspector, static::$_methodMap[$key])) {
				$setAccess = (
					($type === &#039;method&#039; || $type === &#039;property&#039;) &amp;&amp;
					array_intersect($result[&#039;modifiers&#039;], [&#039;private&#039;, &#039;protected&#039;]) !== [] &amp;&amp;
					method_exists($inspector, &#039;setAccessible&#039;)
				);

				if ($setAccess) {
					$inspector-&gt;setAccessible(true);
				}
				$result[$key] = $inspector-&gt;{static::$_methodMap[$key]}();

				if ($setAccess) {
					$inspector-&gt;setAccessible(false);
				}
			}
		}

		if ($type === &#039;property&#039; &amp;&amp; $classInspector &amp;&amp; !$classInspector-&gt;isAbstract()) {
			$inspector-&gt;setAccessible(true);

			try {
				$result[&#039;value&#039;] = $inspector-&gt;getValue(static::_class($class));
			} catch (Exception $e) {
				return null;
			}
		}

		if (isset($result[&#039;start&#039;]) &amp;&amp; isset($result[&#039;end&#039;])) {
			$result[&#039;length&#039;] = $result[&#039;end&#039;] - $result[&#039;start&#039;];
		}
		if (isset($result[&#039;comment&#039;])) {
			$result += Docblock::comment($result[&#039;comment&#039;]);
		}
		return $result;
	}</code></pre>
					</div>
				</div>
			</section>
							</div>
	</article>			</div>
		</div>
		<footer class="main">
	<div class="area"></div>
	<div class="area"></div>
	<div class="area"></div>
	<div class="area"></div>

	<div class="social">
		<a href="https://github.com/unionofrad" target="new">GitHub</a>		<span class="separator">/</span>
		<a href="https://twitter.com/unionofrad" target="new">Twitter</a>		<span class="separator">/</span>
		<a href="http://www.reddit.com/r/li3" target="new">Reddit</a>		<span class="separator">/</span>
		<a href="https://stackoverflow.com/questions/tagged/lithium" target="new">Stack Overflow</a>	</div>
	<div class="testimonial">
		<img src="/assets/v:__PROJECT_VERSION_BUILD__xyzz/img/testimonials/10.png" alt="Testimonial Image" />		<p>I think it's time you started<br />
writing better code.</p>
	</div>
	<div class="copyright">
		Pretty much everything is (c) 2009-2024 and beyond, the <a href="http://unionofrad.org">Union of RAD</a>.	</div>
</footer>	</body>
</body>
</html>
