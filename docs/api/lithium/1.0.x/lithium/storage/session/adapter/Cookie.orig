<!doctype html>
<html lang="en">
<head>
	<meta charset="UTF-8" />	<title>lithium\storage\session\adapter\Cookie – Framework API v1.0.x – Documentation – li3 PHP-Framework</title>
		<link rel="stylesheet" href="/assets/v:__PROJECT_VERSION_BUILD__xyzz/css/reset.css" />
	<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Anonymous+Pro:400,700,400italic,700italic" />
	<link rel="stylesheet" href="/assets/v:__PROJECT_VERSION_BUILD__xyzz/css/u1m.css" />
	<link rel="stylesheet" href="/assets/v:__PROJECT_VERSION_BUILD__xyzz/css/li3_docs.css" />
	<link rel="stylesheet" href="/assets/v:__PROJECT_VERSION_BUILD__xyzz/css/highlight.css" />
	
	
	<script src="//cdnjs.cloudflare.com/ajax/libs/require.js/2.1.10/require.min.js"></script>
	<script src="/assets/v:__PROJECT_VERSION_BUILD__xyzz/js/base.js"></script>
	<script src="//cdnjs.cloudflare.com/ajax/libs/prism/0.0.1/prism.min.js"></script>
	
	
	<link rel="icon" href="/assets/ico/site.png">

		<script>
	  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
	  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
	  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
	  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

	  ga('create', 'UA-11048416-4', 'auto');
	  ga('send', 'pageview');
	</script>
	</head>
<body class="layout-default li3-docs">
		<div id="container">
			<header class="main">
	<div class="left">
		<h1><a href="/" class="li3-logo">li3</a></h1>
	</div>
	<div class="right">
		<nav class="main-nav"><a href="http://news.li3.me">News</a><a href="/docs" class="active">Documentation</a><a href="/versions">Versions</a><a href="/present">Presentations</a><a href="/support">Community</a><a href="/development">Development</a></nav>	</div>
</header>							<nav class="crumbs">
	<ul itemscope itemtype="http://schema.org/BreadcrumbList">
			<li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
			<meta itemprop="position" content="1" />
							<a href="/docs" itemscope itemprop="item" itemtype="http://schema.org/Thing"><span itemprop="name">Documentation</span></a>
					</li>
			<li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
			<meta itemprop="position" content="2" />
							<a href="/docs/api/lithium/1.0.x/lithium" itemscope itemprop="item" itemtype="http://schema.org/Thing"><span itemprop="name">Framework API (1.0.x)</span></a>
					</li>
			<li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
			<meta itemprop="position" content="3" />
							<a href="/docs/api/lithium/1.0.x/lithium" itemscope itemprop="item" itemtype="http://schema.org/Thing"><span itemprop="name">lithium</span></a>
					</li>
			<li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
			<meta itemprop="position" content="4" />
							<a href="/docs/api/lithium/1.0.x/lithium/storage" itemscope itemprop="item" itemtype="http://schema.org/Thing"><span itemprop="name">storage</span></a>
					</li>
			<li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
			<meta itemprop="position" content="5" />
							<a href="/docs/api/lithium/1.0.x/lithium/storage/session" itemscope itemprop="item" itemtype="http://schema.org/Thing"><span itemprop="name">session</span></a>
					</li>
			<li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
			<meta itemprop="position" content="6" />
							<a href="/docs/api/lithium/1.0.x/lithium/storage/session/adapter" itemscope itemprop="item" itemtype="http://schema.org/Thing"><span itemprop="name">adapter</span></a>
					</li>
			<li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
			<meta itemprop="position" content="7" />
							<span itemscope itemprop="item" itemtype="http://schema.org/Thing">
					<span itemprop="name">Cookie</span>
				</span>
					</li>
		</ul>
</nav>						<div id="content">
				<article class="apis-view has-aside-right">

	<nav class="aside aside-right">
			<h3 class="h-gamma">Contents</h3>
		<ul>
			<li class="nav-up"><a href="/docs/api/lithium/1.0.x/lithium/storage/session/adapter" rel="up">../</a>		</ul>
	
													
						<h3 class="h-gamma">Methods</h3>
			<ul>
												<li class="method public">
				<a href="/docs/api/lithium/1.0.x/lithium/storage/session/adapter/Cookie::__construct()">__construct()</a>												<li class="method public">
				<a href="/docs/api/lithium/1.0.x/lithium/storage/session/adapter/Cookie::key()">key()</a>												<li class="method public">
				<a href="/docs/api/lithium/1.0.x/lithium/storage/session/adapter/Cookie::isEnabled()">isEnabled()</a>												<li class="method public">
				<a href="/docs/api/lithium/1.0.x/lithium/storage/session/adapter/Cookie::isStarted()">isStarted()</a>												<li class="method public">
				<a href="/docs/api/lithium/1.0.x/lithium/storage/session/adapter/Cookie::check()">check()</a>												<li class="method public">
				<a href="/docs/api/lithium/1.0.x/lithium/storage/session/adapter/Cookie::read()">read()</a>												<li class="method public">
				<a href="/docs/api/lithium/1.0.x/lithium/storage/session/adapter/Cookie::write()">write()</a>												<li class="method public">
				<a href="/docs/api/lithium/1.0.x/lithium/storage/session/adapter/Cookie::delete()">delete()</a>												<li class="method public">
				<a href="/docs/api/lithium/1.0.x/lithium/storage/session/adapter/Cookie::clear()">clear()</a>												<li class="method public">
				<a href="/docs/api/lithium/1.0.x/lithium/storage/session/adapter/Cookie::keyFormat()">keyFormat()</a>												<li class="method protected inherited">
				<a href="/docs/api/lithium/1.0.x/lithium/core/Object::_init()">_init()</a>												<li class="method public inherited">
				<a href="/docs/api/lithium/1.0.x/lithium/core/Object::applyFilter()">applyFilter()</a>												<li class="method public inherited">
				<a href="/docs/api/lithium/1.0.x/lithium/core/Object::invokeMethod()">invokeMethod()</a>												<li class="method public inherited">
				<a href="/docs/api/lithium/1.0.x/lithium/core/Object::__set_state()">__set_state()</a>												<li class="method public inherited">
				<a href="/docs/api/lithium/1.0.x/lithium/core/Object::respondsTo()">respondsTo()</a>												<li class="method protected inherited">
				<a href="/docs/api/lithium/1.0.x/lithium/core/Object::_instance()">_instance()</a>												<li class="method protected inherited">
				<a href="/docs/api/lithium/1.0.x/lithium/core/Object::_filter()">_filter()</a>												<li class="method protected inherited">
				<a href="/docs/api/lithium/1.0.x/lithium/core/Object::_parents()">_parents()</a>												<li class="method protected inherited">
				<a href="/docs/api/lithium/1.0.x/lithium/core/Object::_stop()">_stop()</a>							</ul>
								<h3 class="h-gamma">Properties</h3>
			<ul>
												<li class="property protected">
				<a href="/docs/api/lithium/1.0.x/lithium/storage/session/adapter/Cookie::$_defaults">$_defaults</a>												<li class="property protected inherited">
				<a href="/docs/api/lithium/1.0.x/lithium/core/Object::$_config">$_config</a>												<li class="property protected inherited">
				<a href="/docs/api/lithium/1.0.x/lithium/core/Object::$_autoConfig">$_autoConfig</a>												<li class="property protected inherited">
				<a href="/docs/api/lithium/1.0.x/lithium/core/Object::$_methodFilters">$_methodFilters</a>												<li class="property protected inherited">
				<a href="/docs/api/lithium/1.0.x/lithium/core/Object::$_parents">$_parents</a>							</ul>
						</nav>
	<div class="body">
			<h1 class="h-alpha">
		<a href="/docs/api/lithium/1.0.x/lithium" class="symbol-segment">lithium</a>\<a href="/docs/api/lithium/1.0.x/lithium/storage" class="symbol-segment">storage</a>\<a href="/docs/api/lithium/1.0.x/lithium/storage/session" class="symbol-segment">session</a>\<a href="/docs/api/lithium/1.0.x/lithium/storage/session/adapter" class="symbol-segment">adapter</a>\Cookie		</h1>

		<section class="under">
													<div class="extends">
					<span class="extends__title">Extends</span>
											<a href="/docs/api/lithium/1.0.x/lithium/core/Object" class="extends__symbol">lithium\core\Object</a>									</div>
									<div class="tags">
																<span class="tag">class</span>
			</div>
		</section>

					
			<section>
									<div class="summary">
						<p>A minimal adapter to interface with HTTP cookies.</p>
					</div>
				
									<div class="description">
						<p>This adapter provides basic support for <code>write</code>, <code>read</code> and <code>delete</code>
cookie handling, as well as allowing these three methods to be filtered as
per the Lithium filtering system.</p>
					</div>
							</section>

			
			
			
			
			
			
						<section id="source" class="section">
				<h3 class="h-beta">Source</h3>
				<div id="source" class="source-display">
					<div class="source-wrapper">
						<pre class="source-code"><code class="language-php">class Cookie extends \lithium\core\Object {

	/**
	 * Default settings for this session adapter.
	 *
	 * @var array Keys are in direct correspondence with the parameters in the PHP-native
	 *      `setcookie()` method. The only difference is that the `expire` value is a
	 *      strtotime-compatible string instead of an epochal timestamp.
	 */
	protected $_defaults = array(
		&#039;expire&#039; =&gt; &#039;+2 days&#039;, &#039;path&#039; =&gt; &#039;/&#039;,
		&#039;domain&#039; =&gt; &#039;&#039;, &#039;secure&#039; =&gt; false, &#039;httponly&#039; =&gt; false
	);

	/**
	 * Constructor.
	 *
	 * Takes care of setting appropriate configurations for this object.
	 *
	 * @param array $config Optional configuration parameters.
	 * @return void
	 */
	public function __construct(array $config = array()) {
		if (empty($config[&#039;name&#039;])) {
			$config[&#039;name&#039;] = basename(Libraries::get(true, &#039;path&#039;)) . &#039;cookie&#039;;
		}
		parent::__construct($config + $this-&gt;_defaults);
	}

	/**
	 * Obtain the top-level cookie key.
	 *
	 * @return string The configured cookie &#039;name&#039; parameter
	 */
	public function key() {
		return $this-&gt;_config[&#039;name&#039;];
	}

	/**
	 * Determines if cookies are enabled.
	 *
	 * @return boolean True
	 * @todo Implement
	 */
	public function isEnabled() {
		return true;
	}

	/**
	 * Obtain the status of the cookie storage.
	 *
	 * @return boolean True if $_COOKIE has been initialized, false otherwise.
	 */
	public function isStarted() {
		return (isset($_COOKIE));
	}

	/**
	 * Checks if a value has been set in the cookie.
	 *
	 * @param string $key Key of the entry to be checked.
	 * @return \Closure Function returning boolean `true` if the key exists, `false` otherwise.
	 */
	public function check($key) {
		$config = $this-&gt;_config;

		return function($self, $params) use (&amp;$config) {
			return (isset($_COOKIE[$config[&#039;name&#039;]][$params[&#039;key&#039;]]));
		};
	}

	/**
	 * Read a value from the cookie.
	 *
	 * @param null|string $key Key of the entry to be read. If $key is null, returns
	 *        all cookie key/value pairs that have been set.
	 * @param array $options Options array. Not used in this adapter.
	 * @return \Closure Function returning data in the session if successful, `null` otherwise.
	 */
	public function read($key = null, array $options = array()) {
		$config = $this-&gt;_config;

		return function($self, $params) use (&amp;$config) {
			$key = $params[&#039;key&#039;];
			if (!$key) {
				if (isset($_COOKIE[$config[&#039;name&#039;]])) {
					return $_COOKIE[$config[&#039;name&#039;]];
				}
				return array();
			}
			if (strpos($key, &#039;.&#039;) !== false) {
				$key = explode(&#039;.&#039;, $key);
				$result = (isset($_COOKIE[$config[&#039;name&#039;]])) ? $_COOKIE[$config[&#039;name&#039;]] : array();

				foreach ($key as $k) {
					if (!isset($result[$k])) {
						return null;
					}
					$result = $result[$k];
				}
				return $result;
			}
			if (isset($_COOKIE[$config[&#039;name&#039;]][$key])) {
				return $_COOKIE[$config[&#039;name&#039;]][$key];
			}
		};
	}

	/**
	 * Write a value to the cookie store.
	 *
	 * @param string $key Key of the item to be stored.
	 * @param mixed $value The value to be stored.
	 * @param array $options Options array.
	 * @return \Closure Function returning boolean `true` on successful write, `false` otherwise.
	 */
	public function write($key, $value = null, array $options = array()) {
		$expire = (!isset($options[&#039;expire&#039;]) &amp;&amp; empty($this-&gt;_config[&#039;expire&#039;]));
		$config = $this-&gt;_config;
		$cookieClass = __CLASS__;

		if ($expire &amp;&amp; $key !== $config[&#039;name&#039;]) {
			return null;
		}
		$expires = (isset($options[&#039;expire&#039;])) ? $options[&#039;expire&#039;] : $config[&#039;expire&#039;];

		return function($self, $params) use (&amp;$config, &amp;$expires, $cookieClass) {
			$key = $params[&#039;key&#039;];
			$value = $params[&#039;value&#039;];
			$key = array($key =&gt; $value);
			if (is_array($value)) {
				$key = Set::flatten($key);
			}

			foreach ($key as $name =&gt; $val) {
				$name = $cookieClass::keyFormat($name, $config);
				$result = setcookie($name, $val, strtotime($expires), $config[&#039;path&#039;],
					$config[&#039;domain&#039;], $config[&#039;secure&#039;], $config[&#039;httponly&#039;]
				);

				if (!$result) {
					throw new RuntimeException(&quot;There was an error setting {$name} cookie.&quot;);
				}
			}
			return true;
		};
	}

	/**
	 * Delete a value from the cookie store.
	 *
	 * @param string $key The key to be deleted from the cookie store.
	 * @param array $options Options array.
	 * @return \Closure Function returning boolean `true` on successful delete, `false` otherwise.
	 */
	public function delete($key, array $options = array()) {
		$config = $this-&gt;_config;
		$cookieClass = get_called_class();

		return function($self, $params) use (&amp;$config, $cookieClass) {
			$key = $params[&#039;key&#039;];
			$path = &#039;/&#039; . str_replace(&#039;.&#039;, &#039;/&#039;, $config[&#039;name&#039;] . &#039;.&#039; . $key) . &#039;/.&#039;;
			$cookies = current(Set::extract($_COOKIE, $path));
			if (is_array($cookies)) {
				$cookies = array_keys(Set::flatten($cookies));
				foreach ($cookies as &amp;$name) {
					$name = $key . &#039;.&#039; . $name;
				}
			} else {
				$cookies = array($key);
			}
			foreach ($cookies as &amp;$name) {
				$name = $cookieClass::keyFormat($name, $config);
				$result = setcookie($name, &quot;&quot;, 1, $config[&#039;path&#039;],
					$config[&#039;domain&#039;], $config[&#039;secure&#039;], $config[&#039;httponly&#039;]
				);
				if (!$result) {
					throw new RuntimeException(&quot;There was an error deleting {$name} cookie.&quot;);
				}
			}
			return true;
		};
	}

	/**
	 * Clears all cookies.
	 *
	 * @param array $options Options array. Not used fro this adapter method.
	 * @return boolean True on successful clear, false otherwise.
	 */
	public function clear(array $options = array()) {
		$options += array(&#039;destroySession&#039; =&gt; true);
		$config = $this-&gt;_config;
		$cookieClass = get_called_class();

		return function($self, $params) use (&amp;$config, $options, $cookieClass) {
			if ($options[&#039;destroySession&#039;] &amp;&amp; session_id()) {
				session_destroy();
			}
			if (!isset($_COOKIE[$config[&#039;name&#039;]])) {
				return true;
			}
			$cookies = array_keys(Set::flatten($_COOKIE[$config[&#039;name&#039;]]));
			foreach ($cookies as $name) {
				$name = $cookieClass::keyFormat($name, $config);
				$result = setcookie($name, &quot;&quot;, 1, $config[&#039;path&#039;],
					$config[&#039;domain&#039;], $config[&#039;secure&#039;], $config[&#039;httponly&#039;]
				);
				if (!$result) {
					throw new RuntimeException(&quot;There was an error clearing {$cookie} cookie.&quot;);
				}
			}
			unset($_COOKIE[$config[&#039;name&#039;]]);
			return true;
		};
	}

	/**
	 * Formats the given `$name` argument for use in the cookie adapter.
	 *
	 * @param string $name The key to be formatted, e.g. `foo.bar.baz`.
	 * @param array $config
	 * @return string The formatted key.
	 */
	public static function keyFormat($name, $config) {
		return $config[&#039;name&#039;] . &#039;[&#039; . str_replace(&#039;.&#039;, &#039;][&#039;, $name) . &#039;]&#039;;
	}
}</code></pre>
					</div>
				</div>
			</section>
							</div>
	</article>			</div>
		</div>
		<footer class="main">
	<div class="area"></div>
	<div class="area"></div>
	<div class="area"></div>
	<div class="area"></div>

	<div class="social">
		<a href="https://github.com/unionofrad" target="new">GitHub</a>		<span class="separator">/</span>
		<a href="https://twitter.com/unionofrad" target="new">Twitter</a>		<span class="separator">/</span>
		<a href="http://www.reddit.com/r/li3" target="new">Reddit</a>		<span class="separator">/</span>
		<a href="https://stackoverflow.com/questions/tagged/lithium" target="new">Stack Overflow</a>	</div>
	<div class="testimonial">
		<img src="/assets/v:__PROJECT_VERSION_BUILD__xyzz/img/testimonials/10.png" alt="Testimonial Image" />		<p>I think it's time you started<br />
writing better code.</p>
	</div>
	<div class="copyright">
		Pretty much everything is (c) 2009-2024 and beyond, the <a href="http://unionofrad.org">Union of RAD</a>.	</div>
</footer>	</body>
</body>
</html>
