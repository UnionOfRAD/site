<!doctype html>
<html lang="en">
<head>
	<meta charset="UTF-8" />	<title>lithium\data\source\mongo_db\Exporter::_update() – Framework API v1.0.x – Documentation – li3 PHP-Framework</title>
		<link rel="stylesheet" href="/assets/v:__PROJECT_VERSION_BUILD__xyzz/css/reset.css" />
	<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Anonymous+Pro:400,700,400italic,700italic" />
	<link rel="stylesheet" href="/assets/v:__PROJECT_VERSION_BUILD__xyzz/css/u1m.css" />
	<link rel="stylesheet" href="/assets/v:__PROJECT_VERSION_BUILD__xyzz/css/li3_docs.css" />
	<link rel="stylesheet" href="/assets/v:__PROJECT_VERSION_BUILD__xyzz/css/highlight.css" />
	
	
	<script src="//cdnjs.cloudflare.com/ajax/libs/require.js/2.1.10/require.min.js"></script>
	<script src="/assets/v:__PROJECT_VERSION_BUILD__xyzz/js/base.js"></script>
	<script src="//cdnjs.cloudflare.com/ajax/libs/prism/0.0.1/prism.min.js"></script>
	
	
	<link rel="icon" href="/assets/ico/site.png">

		<script>
	  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
	  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
	  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
	  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

	  ga('create', 'UA-11048416-4', 'auto');
	  ga('send', 'pageview');
	</script>
	</head>
<body class="layout-default li3-docs">
		<div id="container">
			<header class="main">
	<div class="left">
		<h1><a href="/" class="li3-logo">li3</a></h1>
	</div>
	<div class="right">
		<nav class="main-nav"><a href="http://news.li3.me">News</a><a href="/docs" class="active">Documentation</a><a href="/versions">Versions</a><a href="/present">Presentations</a><a href="/support">Community</a><a href="/development">Development</a></nav>	</div>
</header>							<nav class="crumbs">
	<ul itemscope itemtype="http://schema.org/BreadcrumbList">
			<li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
			<meta itemprop="position" content="1" />
							<a href="/docs" itemscope itemprop="item" itemtype="http://schema.org/Thing"><span itemprop="name">Documentation</span></a>
					</li>
			<li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
			<meta itemprop="position" content="2" />
							<a href="/docs/api/lithium/1.0.x/lithium" itemscope itemprop="item" itemtype="http://schema.org/Thing"><span itemprop="name">Framework API (1.0.x)</span></a>
					</li>
			<li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
			<meta itemprop="position" content="3" />
							<a href="/docs/api/lithium/1.0.x/lithium" itemscope itemprop="item" itemtype="http://schema.org/Thing"><span itemprop="name">lithium</span></a>
					</li>
			<li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
			<meta itemprop="position" content="4" />
							<a href="/docs/api/lithium/1.0.x/lithium/data" itemscope itemprop="item" itemtype="http://schema.org/Thing"><span itemprop="name">data</span></a>
					</li>
			<li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
			<meta itemprop="position" content="5" />
							<a href="/docs/api/lithium/1.0.x/lithium/data/source" itemscope itemprop="item" itemtype="http://schema.org/Thing"><span itemprop="name">source</span></a>
					</li>
			<li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
			<meta itemprop="position" content="6" />
							<a href="/docs/api/lithium/1.0.x/lithium/data/source/mongo_db" itemscope itemprop="item" itemtype="http://schema.org/Thing"><span itemprop="name">mongo_db</span></a>
					</li>
			<li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
			<meta itemprop="position" content="7" />
							<a href="/docs/api/lithium/1.0.x/lithium/data/source/mongo_db/Exporter" itemscope itemprop="item" itemtype="http://schema.org/Thing"><span itemprop="name">Exporter</span></a>
					</li>
			<li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
			<meta itemprop="position" content="8" />
							<span itemscope itemprop="item" itemtype="http://schema.org/Thing">
					<span itemprop="name">_update()</span>
				</span>
					</li>
		</ul>
</nav>						<div id="content">
				<article class="apis-view has-aside-right">

	<nav class="aside aside-right">
			<h3 class="h-gamma">Contents</h3>
		<ul>
			<li class="nav-up"><a href="/docs/api/lithium/1.0.x/lithium/data/source/mongo_db/Exporter" rel="up">../</a>		</ul>
	
													
										</nav>
	<div class="body">
			<h1 class="h-alpha">
		<a href="/docs/api/lithium/1.0.x/lithium" class="symbol-segment">lithium</a>\<a href="/docs/api/lithium/1.0.x/lithium/data" class="symbol-segment">data</a>\<a href="/docs/api/lithium/1.0.x/lithium/data/source" class="symbol-segment">source</a>\<a href="/docs/api/lithium/1.0.x/lithium/data/source/mongo_db" class="symbol-segment">mongo_db</a>\<a href="/docs/api/lithium/1.0.x/lithium/data/source/mongo_db/Exporter" class="symbol-segment">Exporter</a>::_update()		</h1>

		<section class="under">
															<div class="tags">
													<span class="tag protected">protected</span>
													<span class="tag">static</span>
								<span class="tag">method</span>
			</div>
		</section>

					
			<section>
									<div class="summary">
						<p>Calculates changesets for update operations, and produces an array which can be converted to
a set of native MongoDB update operations.</p>
					</div>
				
							</section>

						<section id="params">
				<h3 class="h-beta">Parameters</h3>
				<ul class="parameters">
											<li>
							<span class="type">array</span>
							<code class="name">$export</code>
															<span class="parameter">
									<p>An array of fields exported from a call to <code>Document::export()</code>, and
should contain the following keys:</p>
<ul>
<li><code>'data'</code> <em>array</em>: An array representing the original data loaded from the
database for the document.</li>
<li><code>'update'</code> <em>array</em>: An array representing the current state of the document,
containing any modifications made.</li>
<li><code>'key'</code> <em>string</em>: If this is a nested document, this is a dot-separated path
from the root-level document.</li>
</ul>
								</span>
													</li>
									</ul>
			</section>
			
						<section id="return">
				<h3 class="h-beta">Returns</h3>
				<span class="type">array</span>
									<span class="return">
						<p>Returns an array representing the changes to be made to the document. These
are converted to database-native commands by the <code>toCommand()</code> method.</p>
					</span>
							</section>
			
			
			
			
			
						<section id="source" class="section">
				<h3 class="h-beta">Source</h3>
				<div id="source" class="source-display">
					<div class="source-wrapper">
						<pre class="source-code"><code class="language-php">	protected static function _update($export) {
		$export += array(
			&#039;data&#039; =&gt; array(),
			&#039;update&#039; =&gt; array(),
			&#039;remove&#039; =&gt; array(),
			&#039;rename&#039; =&gt; array(),
			&#039;key&#039; =&gt; &#039;&#039;
		);
		$path = $export[&#039;key&#039;] ? &quot;{$export[&#039;key&#039;]}.&quot; : &quot;&quot;;
		$result = array(&#039;update&#039; =&gt; array(), &#039;remove&#039; =&gt; array());
		$left = static::_diff($export[&#039;data&#039;], $export[&#039;update&#039;]);
		$right = static::_diff($export[&#039;update&#039;], $export[&#039;data&#039;]);

		$objects = array_filter($export[&#039;update&#039;], function($value) {
			return (is_object($value) &amp;&amp; method_exists($value, &#039;export&#039;));
		});
		array_map(function($key) use (&amp;$left) { unset($left[$key]); }, array_keys($right));

		foreach ($left as $key =&gt; $value) {
			$result = static::_append($result, &quot;{$path}{$key}&quot;, $value, &#039;remove&#039;);
		}
		$update = $right + $objects;

		foreach ($update as $key =&gt; $value) {
			$original = $export[&#039;data&#039;];
			$isArray = is_object($value) &amp;&amp; $value instanceof static::$_classes[&#039;set&#039;];

			$options = array(
				&#039;indexed&#039; =&gt; null,
				&#039;handlers&#039; =&gt; array(
					&#039;MongoDate&#039; =&gt; function($value) { return $value; },
					&#039;MongoId&#039; =&gt; function($value) { return $value; }
				)
			);

			if ($isArray) {
				$newValue = $value-&gt;to(&#039;array&#039;, $options);
				$originalValue = null;
				$shouldConvert = (isset($original[$key]) &amp;&amp; (
					$original[$key] instanceof static::$_classes[&#039;set&#039;] ||
					$original[$key] instanceof static::$_classes[&#039;entity&#039;]
				));
				if ($shouldConvert) {
					$originalValue = $original[$key]-&gt;to(&#039;array&#039;, $options);
				}
				if ($newValue !== $originalValue) {
					$value = $newValue;
				}
			}
			$result = static::_append($result, &quot;{$path}{$key}&quot;, $value, &#039;update&#039;);
		}
		return array_filter($result);
	}</code></pre>
					</div>
				</div>
			</section>
							</div>
	</article>			</div>
		</div>
		<footer class="main">
	<div class="area"></div>
	<div class="area"></div>
	<div class="area"></div>
	<div class="area"></div>

	<div class="social">
		<a href="https://github.com/unionofrad" target="new">GitHub</a>		<span class="separator">/</span>
		<a href="https://twitter.com/unionofrad" target="new">Twitter</a>		<span class="separator">/</span>
		<a href="http://www.reddit.com/r/li3" target="new">Reddit</a>		<span class="separator">/</span>
		<a href="https://stackoverflow.com/questions/tagged/lithium" target="new">Stack Overflow</a>	</div>
	<div class="testimonial">
		<img src="/assets/v:__PROJECT_VERSION_BUILD__xyzz/img/testimonials/10.png" alt="Testimonial Image" />		<p>I think it's time you started<br />
writing better code.</p>
	</div>
	<div class="copyright">
		Pretty much everything is (c) 2009-2024 and beyond, the <a href="http://unionofrad.org">Union of RAD</a>.	</div>
</footer>	</body>
</body>
</html>
